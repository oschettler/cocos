%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 595.28 841.89 0 1 16 FMDOCUMENT
0 0 /Helvetica FMFONTDEFINE
1 0 /Helvetica-Bold FMFONTDEFINE
2 0 /Times-Roman FMFONTDEFINE
3 0 /Times-Bold FMFONTDEFINE
4 0 /Times-BoldItalic FMFONTDEFINE
5 0 /Times-Italic FMFONTDEFINE
6 0 /Helvetica-Oblique FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "103" 1
%%BeginPaperSize: A4
%%EndPaperSize
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
(6.1 Overview) 56.69 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(103) 501.06 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 18 Q
(6.) 56.69 693.83 T
(Processing design description files) 76.71 693.83 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(6.1) 56.69 656.16 T
(Overview) 83.38 656.16 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 14 Q
-0.13 (In accordance with requirements) 56.69 626.49 P
3 F
-0.13 (R6) 242.78 626.49 P
2 F
-0.13 ( and) 259.89 626.49 P
3 F
-0.13 (R7) 286.84 626.49 P
2 F
-0.13 ( and the integration principle \0502\051, stated) 303.95 626.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.19 (on page) 56.69 609.49 P
0.19 (40, we assume that design information is exchanged between encapsulated) 104.32 609.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.28 (design tools and the design information management \050DIM\051 service of an EDA) 56.69 592.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.03 (framework by means of design \336les. In the EDA domain, hardware description lan-) 56.69 575.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.21 (guages \050HDL\051 are used to encode design information and unambiguously def) 56.69 558.49 B
0.35 0.21 (ine) 506.88 558.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0 (design semantics. Due to the many aspects of electronic design \050domains, levels of) 56.69 541.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.16 (detail\051 and varying design tool requirements, there are many HDLs in frequent use.) 56.69 524.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.32 (Some languages cover many aspects of a design, others are specif) 56.69 507.49 B
0.35 0.32 (ic to a single) 448.05 507.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.28 (domain, level of detail or even design tool. Recent years, however) 56.69 490.49 B
0.35 0.28 (, have seen a) 448.5 490.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.12 (strong trend towards HDL standardization as only with standardized HDL syntax) 56.69 473.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.24 (and semantics there can be seamless interoperability between design tools in an) 56.69 456.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.04 (open, integrated design environment. Some design description languages and their) 56.69 439.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(preferred area of use are listed in T) 56.69 422.49 T
(able) 252.02 422.49 T
(10.) 278.85 422.49 T
0 0 0 1 0 0 0 K
55.46 76.54 525.64 385.51 C
0 0 0 1 0 0 0 K
55.46 73.7 526.01 396.85 R
7 X
0 0 0 1 0 0 0 K
V
4 14 Q
0 X
(T) 55.46 122.52 T
(able 10.) 62.72 122.52 T
5 F
(Some design description languages and their pr) 111.33 122.52 T
(eferr) 379.14 122.52 T
(ed ar) 405.84 122.52 T
(ea of use.) 434.48 122.52 T
(Note that we have included two or) 55.46 105.52 T
(dinary pr) 247.05 105.52 T
(ogramming languages which ar) 299.03 105.52 T
(e) 477.01 105.52 T
0 0 0 1 0 0 0 K
55.46 77.85 525.64 83.85 C
0 0 0 1 0 0 0 K
55.46 81.85 289.46 81.85 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 0 1 0 0 0 K
55.46 76.54 525.64 385.51 C
0 0 0 1 0 0 0 K
5 14 Q
0 X
0 0 0 1 0 0 0 K
(fr) 55.46 88.52 T
(equently used for behavioural descriptions on low levels of detail.) 64.28 88.52 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(language) 69.04 353.52 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(mostly used for ...) 271.49 353.52 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(VHDL) 67.84 325.52 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(behavioural and structural descriptions on algorithm and func-) 139.84 325.52 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(tional block levels) 139.84 311.52 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(V) 67.84 283.52 T
(erilog) 76.39 283.52 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(behavioural and structural descriptions on register transfer and) 139.84 283.52 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(gate levels) 139.84 269.52 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(EDIF) 67.84 241.52 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(netlists and graphical data for schematics and physical layout) 139.84 241.52 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(GDS-II) 67.84 213.52 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(graphical data for physical layout) 139.84 213.52 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(C++) 67.84 185.52 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(behavioural descriptions on algorithm level) 139.84 185.52 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Prolog) 67.84 157.52 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(behavioural descriptions on architecture and algorithm levels) 139.84 157.52 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
61.84 370.6 61.84 147.1 2 L
V
0.5 H
0 Z
N
133.84 371.1 133.84 146.6 2 L
V
N
519.63 370.6 519.63 147.1 2 L
V
N
61.59 370.85 519.88 370.85 2 L
V
N
62.09 344.1 519.38 344.1 2 L
V
N
62.09 341.6 519.38 341.6 2 L
V
N
61.59 300.85 519.88 300.85 2 L
V
N
61.59 258.85 519.88 258.85 2 L
V
N
61.59 230.85 519.88 230.85 2 L
V
N
61.59 202.85 519.88 202.85 2 L
V
N
61.59 174.85 519.88 174.85 2 L
V
N
61.59 146.85 519.88 146.85 2 L
V
N
0 0 0 1 0 0 0 K
0 0 595.28 841.89 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "103" 1
%%Page: "104" 2
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
1 14 Q
0 X
0 0 0 1 0 0 0 K
(104) 70.87 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Processing design description \336les) 323.84 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
-0.83 (This diversity of languages in design use implies that vendors of EDA frameworks) 85.04 696.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.27 (make an arbitrary selection of the languages they want to support, mainly based on) 70.87 679.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.29 (customer demands. As design methodologies are dif) 70.87 662.49 P
-0.29 (ferent from company to compa-) 361.67 662.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.19 (ny and also evolve constantly) 70.87 645.49 P
-0.19 (, a framework vendor continuously has to support new) 234.85 645.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.38 (design description languages. He may quickly be in a position in which supporting) 70.87 628.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.11 (new languages) 70.87 611.49 P
2 11.2 Q
-0.09 (*) 153.56 617.09 P
2 14 Q
-0.11 ( based on customer demands forms a major part of the overall ef) 159.16 611.49 P
-0.11 (fort) 518.36 611.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.52 (put into framework development. There are three viable approaches to solve this) 70.87 594.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(problem:) 70.87 577.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(1.) 76.54 558.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 14 Q
0.35 0.44 (Not to support design description languages at all. The JESSI Common) 92.13 558.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.39 (Framework, for example, never looks into a design f) 92.13 541.49 B
0.35 0.39 (ile but relies on the) 407.91 541.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.25 (designer to chop his designs in pieces small enough to be managed individu-) 92.13 524.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ally by the DIM service of the framework.) 92.13 507.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(2.) 76.54 488.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 14 Q
0.35 0.11 (T) 92.13 488.49 B
0.35 0.11 (o make an arbitrary selection of the languages to be supported. All design) 99.81 488.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.06 (tools integrated with such a framework \050e.g. Nelsis\051 have at least to provide) 92.13 471.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.31 (converters from their native languages to the languages supported by the) 92.13 454.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.24 (framework. If the supported language selection is not appropriate, and unsup-) 92.13 437.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.09 (ported languages have to be used by design tools because a certain domain or) 92.13 420.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.3 (level of detail cannot be represented, design f) 92.13 403.49 B
0.35 0.3 (iles have to be manipulated) 362.07 403.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(manually by the designer to be digested by the framework.) 92.13 386.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(3.) 76.54 367.5 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 14 Q
0.35 0.25 (T) 92.13 367.5 B
0.35 0.25 (o provide a framework service that allows a framework administrator or) 99.95 367.5 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.19 (even design team members to add support for a desired design description) 92.13 350.5 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0 (language on the f) 92.13 333.5 B
0.35 0 (ly) 189.25 333.5 B
0.35 0 (. Of course support for standard languages can already be) 199.24 333.5 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.34 (provided by the framework vendor) 92.13 316.49 P
0.34 (. Incorporating support for speci\336c design) 287.88 316.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.03 (description languages into an existing framework can even form the basis for) 92.13 299.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(a \337ourishing business niche.) 92.13 282.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.23 (Clearly) 70.87 253.49 P
0.23 (, the third alternative is the most \337exible approach. W) 111.17 253.49 P
0.23 (ithout special support,) 414.06 253.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.09 (however) 70.87 236.49 B
0.35 0.09 (, the ef) 119.1 236.49 B
0.35 0.09 (fort of writing the necessary language processors for complex lan-) 158.71 236.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.11 (guages like VHDL is a major engineering task and certainly out of the scope of a) 70.87 219.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(design team wanting to design chips.) 70.87 202.49 T
0 0 0 1 0 0 0 K
70.87 118.54 538.58 131.54 C
0 0 0 1 0 0 0 K
70.87 126.54 178.87 126.54 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 0 1 0 0 0 K
0 0 595.28 841.89 C
0 0 0 1 0 0 0 K
2 9.6 Q
0 X
0 0 0 1 0 0 0 K
(*.) 88.87 115.34 T
2 12 Q
(\322to support a design description language\323 here means to be able to manage structural) 98.47 110.54 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(information contained in design \336les by the DIM service and by framework tools like) 88.87 96.54 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(query interfaces and browsers.) 88.87 82.54 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "104" 2
%%Page: "105" 3
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
(6.1 Overview) 56.69 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(105) 501.06 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0 (T) 56.69 696.49 B
0.35 0 (raditionally) 64.76 696.49 B
0.35 0 (, writing language processors is accomplished by any of the following) 128.43 696.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(alternatives:) 56.69 679.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(1.) 62.36 660.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 14 Q
0.35 0.06 (combination of the UNIX tools) 77.95 660.49 B
5 F
0.35 0.06 (sed/awk) 260.07 660.49 B
2 F
0.35 0.06 (, or dedicated report generation lan-) 305.62 660.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(guages like) 77.95 643.49 T
5 F
(perl) 144.83 643.49 T
2 11.2 Q
(*) 167.38 649.09 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(2.) 62.36 624.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 14 Q
(lex) 77.95 624.49 T
2 F
( generated lexical scanner) 94.28 624.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(3.) 62.36 605.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 14 Q
(yacc) 77.95 605.49 T
2 F
( generated parser) 103.6 605.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(4.) 62.36 586.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 14 Q
(yacc) 77.95 586.49 T
2 F
( generated parser enhanced with semantic actions to resolve references) 103.6 586.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.03 (Using \0501\051 requires little coding ef) 56.69 557.49 B
0.35 0.03 (fort and development of language processors can) 246.32 557.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.01 (be incremental due to the interpreting nature of the tools applied; the resulting lan-) 56.69 540.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.02 (guage processors, however) 56.69 523.49 P
0.02 (, have only crude recognition capabilities and high prob-) 207.39 523.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.33 (ability of failure due to syntactic variations in the processed design \336les. Alternative) 56.69 506.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.09 (\0502\051 requires the compilation of generated \322C\323 code; it provides more f) 56.69 489.49 B
0.35 0.09 (lexibility in) 457.8 489.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.01 (the actions that can be triggered when recognizing a language construct. Language) 56.69 472.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.08 (specif) 56.69 455.49 B
0.35 0.08 (ication still is based on regular expressions and therefore too crude for most) 89.81 455.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.2 (real design description languages. Alternatives \0503\051 and \0504\051 have detailed, syntactical) 56.69 438.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.02 (language recognition capabilities. The coding ef) 56.69 421.49 P
0.02 (fort is high because every language) 326.4 421.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.03 (detail must be processed. The language processors thus created are highly depend-) 56.69 404.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.07 (ent on f) 56.69 387.49 B
0.35 0.07 (ine-grained detail of the processed language. As design tools often rely on) 99.97 387.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 F
0.35 0.06 (dialects) 56.69 370.49 B
2 F
0.35 0.06 ( of a standard language, this is an undesirable feature, even more so as the) 100.71 370.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.16 (processing of every single detail of a design description is not necessary for suc-) 56.69 353.5 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(cessful tool encapsulation.) 56.69 336.5 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.31 (The choice of standard compiler construction tools like) 70.87 317.49 P
5 F
-0.31 (yacc) 381.01 317.49 P
2 F
-0.31 ( and) 406.66 317.49 P
5 F
-0.31 (lex) 433.26 317.49 P
2 F
-0.31 ( suggests that) 449.58 317.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.52 (the processing of design \336les is very similar to the initial parsing phase of a compiler) 56.69 300.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.55 (for a particular design description language. There are, however) 56.69 283.49 P
0.55 (, signi\336cant dif) 418.97 283.49 P
0.55 (fer-) 504.21 283.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ences:) 56.69 266.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 70.87 247.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.06 (Lexical and syntactical analysis in a compiler try to digest every single detail) 77.95 247.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 (of a design description to be able to derive an internal representation that) 77.95 230.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.47 (matches the information content of the design description as thoroughly as) 77.95 213.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.22 (possible. For the purpose of design tool encapsulation, only a small part of) 77.95 196.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.05 (design \336les has to be analysed down to single lexems. Lar) 77.95 179.49 P
-0.05 (ge parts can simply) 401.9 179.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.68 (be skipped and regarded as design representation, uninterpreted as far as) 77.95 162.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(design information management is concerned.) 77.95 145.49 T
0 0 0 1 0 0 0 K
56.69 104.54 524.41 117.54 C
0 0 0 1 0 0 0 K
56.69 112.54 164.69 112.54 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 0 1 0 0 0 K
0 0 595.28 841.89 C
0 0 0 1 0 0 0 K
2 9.6 Q
0 X
0 0 0 1 0 0 0 K
-0.04 (*.) 74.69 101.34 P
2 12 Q
-0.05 (Perl gains more and more acceptance as one of the primary scripting languages in EDA) 84.25 96.54 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(environments \050cf. [CFI-EII) 74.69 82.54 T
(95]\051) 207.33 82.54 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "105" 3
%%Page: "106" 4
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
1 14 Q
0 X
0 0 0 1 0 0 0 K
(106) 70.87 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Processing design description \336les) 323.84 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(\245) 85.04 696.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.66 (A lar) 92.13 696.49 P
1.66 (ge part of the lexical and syntactical analysis phases of a compiler is) 121.91 696.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5.02 (concerned with error detection and recovery) 92.13 679.49 P
5.02 (. As this tedious work is) 363.96 679.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.48 (performed by design tools already) 92.13 662.49 P
0.48 (, we can rely on a design description to be) 284.44 662.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(syntactically correct for the purpose of tool encapsulation.) 92.13 645.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 85.04 626.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.46 (Another great ef) 92.13 626.49 P
0.46 (fort in the initial phase of a compiler is the construction and) 184.54 626.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.01 (maintenance of a symbol table for semantic analysis. W) 92.13 609.49 P
-0.01 (e are not interested in) 403.92 609.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.12 (the exact data or control \337ow and can therefore greatly reduce the ef) 92.13 592.49 P
1.12 (fort of) 487.9 592.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.67 (symbol handling. The close cooperation of the new encapsulation service with) 92.13 575.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.3 (a DIM framework service with versatile querying facilities renders manually) 92.13 558.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(constructing a symbol table obsolete.) 92.13 541.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.16 (On the other hand, there are also requirements in the realm of tool encapsulation) 70.87 512.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(that are not even an issue with ordinary compiler technology:) 70.87 495.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 85.04 476.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.85 (All text that is considered design representation does not have to be interpreted) 92.13 476.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.37 (in any way but must be saved complete for later perusal by design tools. Once) 92.13 459.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.61 (an ordinary compiler has built an internal representation of the input read, it) 92.13 442.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.47 (can safely for) 92.13 425.49 P
2.47 (get about the exact textual representation, with the possible) 173 425.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(exception of line numbers for error messages.) 92.13 408.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 85.04 389.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.82 (Global text that neither belongs to structural information nor is associated with) 92.13 389.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3.63 (single chunks of design representation must be preserved to be able to) 92.13 372.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.06 (reconstruct complete design \336les later) 92.13 355.5 P
1.06 (. In a compiler) 307.91 355.5 P
1.06 (, this text is sometimes) 392.19 355.5 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.51 (already resolved by a preprocessor and not even seen by the actual compiler) 92.13 338.5 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.47 (or it serves as context information and is also translated to objects in an) 92.13 321.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(internal representation.) 92.13 304.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.04 (W) 70.87 275.49 P
-0.04 (e conclude that an EDA framework has to of) 82.96 275.49 P
-0.04 (fer a powerful and \337exible service to) 332.77 275.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.2 (incorporate support for specif) 70.87 258.49 B
0.35 0.2 (ic design description languages. While this service) 243.11 258.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.1 (certainly should provide the language processing power of conventional compiler) 70.87 241.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.2 (construction tools, additional requirements have to be met. T) 70.87 224.49 P
-0.2 (o understand the impli-) 408.91 224.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.17 (cations of these requirements, we now take a closer look at which kind of language) 70.87 207.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.01 (processing is actually required to support a selected design description language in) 70.87 190.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(an EDA framework.) 70.87 173.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "106" 4
%%Page: "107" 5
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
(6.2 Requirements) 56.69 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(107) 501.06 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(6.2) 56.69 695.16 T
(Requirements) 83.38 695.16 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 14 Q
(6.2.1) 56.69 655.49 T
(Design file import) 91.72 655.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.1 (Design f) 56.69 626.49 B
0.35 0.1 (iles can either be created manually by a designer or can be the result of a) 104.88 626.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.22 (design tool execution. Whereas in the former case the designer would be free to) 56.69 609.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.4 (arrange the f) 56.69 592.49 B
0.35 0.4 (iles that describe a complete electronic system in any way that is) 132.56 592.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.15 (required for design information management, design tools generally do not provide) 56.69 575.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.22 (this \337exibility) 56.69 558.49 P
-0.22 (. This implies that design \336les have to be analysed to extract the struc-) 133.75 558.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.28 (tural information necessary to perform design information management. Corre-) 56.69 541.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.28 (sponding to the notions de\336ned in our conceptual schema the following items have) 56.69 524.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(to be created:) 56.69 507.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 70.87 488.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(interface, implementation, and con\336guration) 77.95 488.49 T
5 F
(objects) 330.69 488.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(\245) 70.87 469.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 F
(attribute) 77.95 469.49 T
2 F
( values for names, designer) 126.18 469.49 T
(, modi\336cation dates) 278.42 469.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 70.87 450.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 F
-0.64 (r) 77.95 450.49 P
-0.64 (elationships) 82.88 450.49 P
2 F
-0.64 ( for compositional hierarchy) 150.56 450.49 P
-0.64 (, version derivation, and equivalence) 306.74 450.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.08 (In addition, textual design representation has to be associated with objects so that it) 56.69 421.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(can be retrieved again on export.) 56.69 404.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(6.2.2) 56.69 365.49 T
(Design file export) 91.72 365.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.37 (When performing a design step by running a tool, design information must be) 56.69 336.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.07 (exported from the DIM service to design f) 56.69 319.49 B
0.35 0.07 (iles. This can be achieved by traversing) 298.19 319.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.37 (the graph of objects managed by the DIM service according to our conceptual) 56.69 302.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.11 (schema, starting from a selected root object, and retrieving the design representa-) 56.69 285.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(tion that is associated with the objects visited.) 56.69 268.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.84 (The existence of component con\336gurations in a design hierarchy complicates mat-) 70.87 249.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.84 (ters. In cases where a design description language is used that supports con\336gura-) 56.69 232.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.58 (tions \050like VHDL\051, the con\336gurations managed by the DIM service can be translated) 56.69 215.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.81 (into appropriate con\336guration declarations in the language and emitted along with) 56.69 198.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.52 (the selected interfaces and implementations. If, however) 56.69 181.49 P
0.52 (, the design language does) 374.96 181.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.36 (not have a notion of \322con\336guration\323 or the notion supported by the language grossly) 56.69 164.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.69 (deviates from the notion used by the DIM service, con\336gurations have to be resolved) 56.69 147.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.67 (and emitted as static bindings between compound implementations and their compo-) 56.69 130.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(nents.) 56.69 113.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "107" 5
%%Page: "108" 6
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
1 14 Q
0 X
0 0 0 1 0 0 0 K
(108) 70.87 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Processing design description \336les) 323.84 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(6.2.3) 70.87 696.49 T
(Associating binary objects with structural information) 105.89 696.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
-0.04 (The import and export mechanisms described above assume that design \336les have a) 70.87 667.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.11 (well-de\336ned structure and contain some kind of parseable and printable description) 70.87 650.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.14 (of the design. Quite often, however) 70.87 633.49 P
-0.14 (, design tools produce and read an opaque, inter-) 267.52 633.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.04 (mediate design description. Examples for this kind of f) 70.87 616.49 B
0.35 0.04 (iles are results from VHDL) 382.89 616.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.05 (analysers, simulation results, or schematics in undocumented, proprietary formats.) 70.87 599.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.45 (When no specif) 70.87 582.49 B
0.35 0.45 (ication of the lexical and syntactical structure of such opaque) 164.97 582.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.13 (descriptions is available to the tool integrator) 70.87 565.49 P
-0.13 (, the \336les containing these descriptions) 322.26 565.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.06 (can only be manipulated as a whole. If such f) 70.87 548.49 B
0.35 0.06 (iles can be associated with a specif) 329.61 548.49 B
0.35 0.06 (ic) 528.41 548.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.53 (design object in a composition hierarchy they can be imported and exported) 70.87 531.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.25 (together with it. If they cannot be associated with a speci\336c design object, they have) 70.87 514.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.48 (to be attached to the root object of the composition hierarchy and have to be) 70.87 497.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.19 (imported and exported whenever a sub-module of this root object is imported or) 70.87 480.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.18 (exported. W) 70.87 463.49 B
0.35 0.18 (e now introduce our approach to providing a framework service that) 141.32 463.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ful\336ls these requirements.) 70.87 446.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(6.3) 70.87 407.16 T
(Approach) 97.55 407.16 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 14 Q
-0.32 (W) 70.87 377.49 P
-0.32 (e have developed a toolkit that can be of) 82.96 377.49 P
-0.32 (fered as a new service by framework ven-) 306.42 377.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.11 (dors to their customers or can be used by framework vendors to build design lan-) 70.87 360.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.17 (guage support for standard languages into their products. W) 70.87 343.49 P
-0.17 (e follow the principle of) 403.95 343.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.19 (separating syntax specif) 70.87 326.49 B
0.35 0.19 (ication from the actual creation of objects on import and) 209.75 326.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0 (retrieval of design information on export. The syntax specif) 70.87 309.49 B
0.35 0 (ication of a given HDL) 407.21 309.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.11 (is lar) 70.87 292.49 P
0.11 (gely static and parsing can be greatly simpli\336ed when using standard compiler) 98.33 292.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.31 (construction tools like yacc and lex. The actual interfacing to a DIM service is) 70.87 275.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.02 (likely to evolve as requirements on design information management in a particular) 70.87 258.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.18 (design situation mature. This part of language processing can therefore bene\336t from) 70.87 241.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.05 (the accessibility gained from coding in an interpreted extension language. As sug-) 70.87 224.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(gested in Section) 70.87 207.49 T
(4.3, we use an extended T) 170.03 207.49 T
(cl for this purpose.) 314.84 207.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(6.3.1) 70.87 168.49 T
(Syntax specification) 105.89 168.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.19 (As opposed to the situation in an ordinary compiler in which a program in some) 70.87 139.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.2 (high-level programming language is translated into a program in a dif) 70.87 122.49 B
0.35 0.2 (ferent lan-) 478.49 122.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.09 (guage like assembler or machine language, input and output to and from the DIM) 70.87 105.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "108" 6
%%Page: "109" 7
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
(6.3 Approach) 56.69 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(109) 501.06 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.25 (service is in the same language.) 56.69 696.49 B
2 11.2 Q
0.28 0.25 (*) 243.82 702.09 B
2 14 Q
0.35 0.25 ( As such, it is desirable to use the same syntax) 249.67 696.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(speci\336cation for both import and export.) 56.69 679.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.47 (As stated earlier) 70.87 660.49 P
0.47 (, we can assume that only little information out of the whole in-) 162.21 660.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.22 (formation content of a design \336le is needed for successful design information man-) 56.69 643.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.17 (agement. W) 56.69 626.49 P
0.17 (e can furthermore assume design \336les to be syntactically correct. These) 123.39 626.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.11 (two assumptions greatly simplify the amount of syntax that actually has to be spec-) 56.69 609.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.23 (i\336ed exactly) 56.69 592.49 P
0.23 (. On the other hand, partial analysis poses additional problems not nor-) 124.84 592.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.29 (mally encountered in syntax analysis. While lar) 56.69 575.49 P
0.29 (ge parts of a design \336le can be ana-) 324.56 575.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.9 (lysed according to a lexical and syntactical speci\336cation that generously ignores) 56.69 558.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.55 (most of the tedious detail of a complete design description, other parts have to be an-) 56.69 541.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.71 (alysed down to single lexems in order to retrieve all the information necessary for) 56.69 524.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.23 (design information management. For example, the analysis of a VHDL \336le only has) 56.69 507.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.36 (to reveal the names and extent of contained entity declarations and architecture bod-) 56.69 490.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.94 (ies, but) 56.69 473.49 P
5 F
1.94 (all) 104.52 473.49 P
2 F
1.94 ( the information speci\336ed in a con\336guration declaration has to be re-) 119.3 473.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(trieved.) 56.69 456.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.09 (W) 70.87 437.49 P
0.09 (e solve this problem by allowing modular language speci\336cations. The speci\336-) 82.96 437.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.81 (cation of a design description language may consist of several modules, each of) 56.69 420.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.52 (which de\336nes the lexical properties and syntax for a part of the whole language.) 56.69 403.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.25 (There is always a main module that provides an entry point for syntax analysis and) 56.69 386.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.04 (generation. W) 56.69 369.5 P
1.04 (ith the recognition of certain constructs, another module may be in-) 136.48 369.5 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.39 (voked that takes over syntax analysis from where it was invoked. Once a complete) 56.69 352.5 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.16 (program de\336ned by the language of the subordinate module has been recognized,) 56.69 335.5 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.54 (control is returned to the caller) 56.69 318.49 P
-0.54 (. As dif) 225.45 318.49 P
-0.54 (ferent modules can de\336ne completely dif) 265.72 318.49 P
-0.54 (ferent) 491.76 318.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.85 (lexical properties, modular language speci\336cations allow to analyse design \336les at) 56.69 301.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.21 (varying granularities. The net result is a major reduction in the amount of language) 56.69 284.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.13 (detail that has to be speci\336ed for design \336le analysis while we are still able to digest) 56.69 267.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\336ne-grained detail where appropriate.) 56.69 250.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.07 (W) 70.87 231.49 P
0.07 (e use the same language speci\336cation to de\336ne both input and output. As such,) 82.96 231.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 (the speci\336cation language needs to de\336ne both lexical properties and syntax in one) 56.69 214.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.3 (place. In addition, grammar symbols may be tagged for ease of reference during im-) 56.69 197.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.53 (port and export. The speci\336cation may be decorated with output formatting informa-) 56.69 180.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(tion.) 56.69 163.49 T
0 0 0 1 0 0 0 K
56.69 104.54 524.41 117.54 C
0 0 0 1 0 0 0 K
56.69 112.54 164.69 112.54 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 0 1 0 0 0 K
0 0 595.28 841.89 C
0 0 0 1 0 0 0 K
2 9.6 Q
0 X
0 0 0 1 0 0 0 K
-0.37 (*.) 74.69 101.34 P
2 12 Q
-0.46 (W) 83.92 96.54 P
-0.46 (e regard situations in which design information has to be converted from one language) 94.29 96.54 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(to another as the task of dedicated design tools.) 74.69 82.54 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "109" 7
%%Page: "110" 8
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
1 14 Q
0 X
0 0 0 1 0 0 0 K
(1) 70.87 746.65 T
(10) 77.88 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Processing design description \336les) 323.84 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(6.3.2) 70.87 696.49 T
(Parse tree construction) 105.89 696.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.13 (Once analysed, the design information retrieved from design f) 70.87 667.49 B
0.35 0.13 (iles must be or) 428.68 667.49 B
0.35 0.13 (gan-) 513.45 667.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.02 (ized in a structure that is easily traversed from extension language scripts to create) 70.87 650.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.28 (the corresponding objects, attribute values, and relations in the DIM service. A) 70.87 633.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0 (parse tree can be created automatically during syntax analysis, and, combined with) 70.87 616.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.2 (an extension language binding, is well suited as intermediate representation. W) 70.87 599.49 B
0.35 0.2 (e) 532.36 599.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.12 (choose a generic data structure for the parse tree that is independent of the actual) 70.87 582.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.2 (language syntax.) 70.87 565.49 B
2 11.2 Q
0.28 0.2 (*) 168.52 571.09 B
2 14 Q
0.35 0.2 ( Parse trees are constructed from generic nodes that carry type) 174.32 565.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(information, user de\336ned tags, and text that stems from analysed designed \336les.) 70.87 548.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.12 (W) 85.04 529.49 P
0.12 (e provide no operations to prune the automatically created parse trees, because) 97.14 529.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.48 (there is little need for this extra complexity) 70.87 512.49 P
0.48 (. W) 314.8 512.49 P
0.48 (ith modular language speci\336cations,) 334.93 512.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.49 (parse trees proved to be small compared to those created from complete \336ne-grained) 70.87 495.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.27 (syntax analysis. Parse trees directly re\337ect the extended BNF by which the syntax is) 70.87 478.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.09 (speci\336ed. T) 70.87 461.49 P
0.09 (ree nodes that stem from certain syntax rules carry the name of this rule) 135.79 461.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.97 (as their type. Lists, possibly with separators like \322,\323 or \322;\323, create dedicated list) 70.87 444.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.86 (nodes. T) 70.87 427.49 P
-0.86 (ext ranges that are parsed by nested speci\336cation modules result in sub-trees.) 117.24 427.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(6.3.3) 70.87 388.49 T
(The creating of objects during parse tree traversal) 105.89 388.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.12 (The parse tree created automatically during syntax analysis has to be traversed to) 70.87 359.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.29 (determine the objects, attribute values and relationships to be created in design) 70.87 342.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.32 (information management. While all the data from the analysed design \336les is guar-) 70.87 325.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.1 (anteed to be in the parse tree, it is obscured by intermediate nodes that stem from) 70.87 308.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.01 (the structure of the input grammar) 70.87 291.49 B
0.35 0.01 (. W) 263.86 291.49 B
0.35 0.01 (e def) 283.33 291.49 B
0.35 0.01 (ine traversal operations that access child) 310.55 291.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.32 (nodes based on their type and optional tag values, ignoring intermediate tree nodes) 70.87 274.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.03 (that do not carry valuable information. These traversal operations are bound to T) 70.87 257.49 B
0.35 0.03 (cl) 528.45 257.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.31 (commands, so all tree processing can be done by extension language scripting.) 70.87 240.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.06 (While visiting tree nodes, the programmer can store values found in variables and) 70.87 223.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.11 (use their values to f) 70.87 206.49 B
0.35 0.11 (ill the attributes of objects in design information management) 183.53 206.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(once enough information is gathered.) 70.87 189.49 T
0 0 0 1 0 0 0 K
70.87 146.54 538.58 159.54 C
0 0 0 1 0 0 0 K
70.87 154.54 178.87 154.54 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 0 1 0 0 0 K
0 0 595.28 841.89 C
0 0 0 1 0 0 0 K
2 9.6 Q
0 X
0 0 0 1 0 0 0 K
(*.) 88.87 143.34 T
2 12 Q
(Another popular approach for parse tree construction is the de\336nition of special node) 98.47 138.54 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(types for individual grammar rules. While this seems attractive from a purist\325) 88.87 124.54 T
(s point of) 459.49 124.54 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(view) 88.87 110.54 T
(, it would require to de\336ne a subtype of the basic node type for each grammar rule.) 111.41 110.54 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.27 (On the other hand, modules with well-de\336ned interfaces rather than deep inheritance trees) 88.87 96.54 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(have proven more usable in practice [Udell) 88.87 82.54 T
(94].) 299.14 82.54 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "110" 8
%%Page: "111" 9
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
(6.4 A speci\336cation language for HDL syntax) 56.69 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(1) 502.6 746.65 T
(1) 509.61 746.65 T
(1) 516.62 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
-0.76 (W) 70.87 696.49 P
-0.76 (e prefer the programmed approach to the more descriptive approach of statically) 82.96 696.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(linking language constructs to DIM object types because thus) 56.69 679.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 70.87 660.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.68 (the relatively \336xed language de\336nition can be separated more cleanly from the) 77.95 660.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4.97 (mapping to DIM object types that is likely to evolve as information) 77.95 643.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(management requirements change;) 77.95 626.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 70.87 607.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4.22 (more \337exibility can be of) 77.95 607.49 P
4.22 (fered to the integrator to gather values from) 236.13 607.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.94 (anywhere in the parse tree. Otherwise, a complicated formalism would be) 77.95 590.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(necessary that would yet be likely to fail in unexpected situations.) 77.95 573.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(6.3.4) 56.69 534.49 T
(Linking types to parse trees) 91.72 534.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.07 (Export from the DIM service to design f) 56.69 505.49 B
0.35 0.07 (iles is an altogether dif) 286.84 505.49 B
0.35 0.07 (ferent matter) 417.17 505.49 B
0.35 0.07 (. Here) 489.53 505.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.23 (we start from a well-structured object graph that already has all the information) 56.69 488.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.11 (needed and is attached to objects in the DIM service so that it is easy to access. For) 56.69 471.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.04 (every language speci\336cation module, we automatically generate a function) 56.69 454.49 P
5 F
0.04 (unparse) 479.3 454.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0 (that takes the name of a syntax rule to be unparsed as parameter as well as a varia-) 56.69 437.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.23 (ble number of parameters that match variable components in a derivation of the) 56.69 420.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.21 (named rule. DIM object types are statically associated with an invocation of the) 56.69 403.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 F
0.35 0 (unparse) 56.69 386.49 B
2 F
0.35 0 ( function that determines the syntax rule according to which objects of this) 101.8 386.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.14 (type are to be exported, as well as the association of attribute values to the rule\325) 56.69 369.49 B
0.35 0.14 (s) 518.96 369.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(variables.) 56.69 352.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.17 (W) 70.87 333.5 P
0.17 (ith this association in place, export of a DIM object into a valid design \336le is a) 83.52 333.5 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.2 (matter of selecting the object and invoking its unparse method. The unparse method) 56.69 316.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.42 (creates a parse tree with constant text in the right places and variables \336lled from the) 56.69 299.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.69 (DIM database. Only a simple preorder traversal is needed to transform such a tree) 56.69 282.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(into a stream of text in the desired syntax.) 56.69 265.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.34 (Now that we have outlined our approach, we will present the technical realization) 70.87 246.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.75 (of this new framework service in Sections 6.4 through 6.6, use VHDL as a case study) 56.69 229.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(in Section) 56.69 212.49 T
(6.7 and compare our approach with existing work in Section) 116.58 212.49 T
(6.8.) 458.37 212.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(6.4) 56.69 173.16 T
(A specification language for HDL syntax) 83.38 173.16 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 14 Q
0.35 0.21 (Our specif) 56.69 143.49 B
0.35 0.21 (ication language has to specify the syntax of a design description lan-) 117.05 143.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.12 (guage for both import and export. As such it allows to de\336ne both lexical properties) 56.69 126.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.14 (and syntax in a single specif) 56.69 109.49 B
0.35 0.14 (ication f) 219.85 109.49 B
0.35 0.14 (ile. W) 266.91 109.49 B
0.35 0.14 (e have already described the basic lan-) 301.17 109.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "111" 9
%%Page: "112" 10
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
1 14 Q
0 X
0 0 0 1 0 0 0 K
(1) 70.87 746.65 T
(12) 77.88 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Processing design description \336les) 323.84 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.03 (guage in Section) 70.87 696.49 B
0.35 0.03 (3.2, so here we only add the constructs that are specif) 168.82 696.49 B
0.35 0.03 (ic to encap-) 472.3 696.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(sulation support.) 70.87 679.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.86 (As a rule, the generated parser modules assume that they process syntactically cor-) 85.04 660.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.69 (rect design \336les. They therefore read over lexems that are not explicitly de\336ned in) 70.87 643.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.32 (the language speci\336cation. This behaviour can be exploited to simplify the language) 70.87 626.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.62 (speci\336cation: Only those languages elements have to be de\336ned that either carry val-) 70.87 609.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.22 (uable information for design information management or those that are necessary to) 70.87 592.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.27 (recognize the syntactical structure of a design description. All other text will be ig-) 70.87 575.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.47 (nored by syntax analysis but will nevertheless appear as text attributes in the parse) 70.87 558.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(tree to ensure that no information is lost for later export.) 70.87 541.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(6.4.1) 70.87 502.49 T
(Nested parser modules) 105.89 502.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.08 (As specif) 70.87 473.49 B
0.35 0.08 (ied in Section) 123.65 473.49 B
0.35 0.08 (3.2, the main part of a language specif) 206.04 473.49 B
0.35 0.08 (ication consists of a) 425.04 473.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.05 (list of grammar rules. A rule may be marked with the property) 70.87 456.49 B
5 F
0.35 0.05 (-syntax) 430.87 456.49 B
2 F
0.35 0.05 (. This prop-) 471.66 456.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.16 (erty marks the right-hand side of a rule to be the pref) 70.87 439.49 B
0.35 0.16 (ix for a nested specif) 378.69 439.49 B
0.35 0.16 (ication) 499.51 439.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.2 (module. Once the pre\336x is recognized, it is pushed back into the input and a subor-) 70.87 422.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.08 (dinate parser module with the same name as the rule\325) 70.87 405.49 B
0.35 0.08 (s is used to specify the input) 375.54 405.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(that follows.) 70.87 388.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.43 (When the subordinate parser has recognized a valid text in the language that it de-) 85.04 369.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\336nes, it returns the control back to the invoking parser) 70.87 352.49 T
(.) 373.39 352.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(rule) 92.13 333.5 T
0 F
( rule {) 117.8 333.5 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\322rule\323 ID) 107 316.49 T
1 F
(opt) 161.44 316.49 T
0 F
( { \322-syntax\323 } alternatives) 183.21 316.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 92.13 298.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(6.4.2) 70.87 259.49 T
(Generating a parser from specifications) 105.89 259.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.26 (Figure) 70.87 230.49 B
0.35 0.26 (25 illustrates the process of generating a parser module from a language) 112.75 230.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.31 (specif) 70.87 213.49 B
0.35 0.31 (ication. A parser module provides the two functions) 105.36 213.49 B
5 F
0.35 0.31 (<module>parse) 418.4 213.49 B
2 F
0.35 0.31 (and) 517.75 213.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 F
0.35 0.06 (<module>unparse) 70.87 196.49 B
2 F
0.35 0.06 (as its public interface) 180.92 196.49 B
5 F
0.35 0.06 (,) 302.74 196.49 B
2 F
0.35 0.06 ( and a wrapper function to create a parse) 306.3 196.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(tree from an extension language command.) 70.87 179.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(There are two variants of the parse function:) 85.04 160.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(T) 92.13 141.49 T
(ree* parse \050char* \336leName\051;) 100.16 141.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 92.13 123.49 T
(ree* parse \050T) 100.16 123.49 T
(ree* parent\051;) 181.33 123.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "112" 10
%%Page: "113" 11
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
(6.4 A speci\336cation language for HDL syntax) 56.69 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(1) 501.83 746.65 T
(13) 508.84 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.12 (While the f) 56.69 696.49 B
0.35 0.12 (irst variant is invoked directly from the extension language binding to) 120.98 696.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.04 (create a parse tree of the named f) 56.69 679.49 B
0.35 0.04 (ile, the second variant is used to pass control to a) 244.98 679.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(subordinate parsing module. The unparse function has the following signature:) 56.69 662.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(T) 77.95 643.49 T
(ree* unparse \050char* rule, ...\051;) 85.99 643.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.13 (The f) 56.69 614.49 B
0.35 0.13 (irst parameter always denotes the syntax rule to be unparsed. The following) 86.87 614.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.03 (parameters supply name/value pairs for variable parts in a derivation of the named) 56.69 597.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.1 (rule. W) 56.69 580.49 B
0.35 0.1 (e will explain the wrapper function to create parse trees when we describe) 98.6 580.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(the extension language binding to parser modules.) 56.69 563.49 T
0 0 0 1 0 0 0 K
55.26 76.54 525.84 456.38 C
0 0 0 1 0 0 0 K
294.11 335.84 355.61 367.95 R
7 X
0 0 0 1 0 0 0 K
V
0.5 H
2 Z
0 X
N
294.11 366.42 355.61 366.42 2 L
4 H
0 Z
3 X
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
294.11 378.66 355.61 410.77 R
7 X
V
0.5 H
2 Z
0 X
N
294.11 409.24 355.61 409.24 2 L
4 H
0 Z
3 X
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
378.5 297.62 440 329.73 R
7 X
V
0.5 H
2 Z
0 X
N
461.46 329.73 522.98 329.73 522.98 302.21 518.67 302.21 518.67 297.62 461.46 297.62 6 Y
7 X
V
0 X
N
522.98 302.21 518.67 297.62 2 L
7 X
V
0 X
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
212.57 247.16 212.57 325.14 274.08 325.14 274.08 251.75 269.79 251.75 269.79 247.16 6 Y
7 X
V
0 X
N
274.08 251.75 269.79 247.16 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
136.77 433.7 198.27 433.7 198.27 406.18 193.98 406.18 193.98 401.59 136.77 401.59 6 Y
7 X
V
0 X
N
198.27 406.18 193.98 401.59 2 L
7 X
V
0 X
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
342.74 256.33 404.24 256.33 404.24 226.14 399.95 226.14 399.95 221.1 342.74 221.1 6 Y
7 X
V
0 X
N
404.24 226.14 399.95 221.1 2 L
7 X
V
0 X
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
415.69 256.33 475.76 256.33 475.76 226.14 471.57 226.14 471.57 221.1 415.69 221.1 6 Y
7 X
V
0 X
N
475.76 226.14 471.57 221.1 2 L
7 X
V
0 X
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
212.7 367.87 274.21 367.87 274.21 340.35 269.92 340.35 269.92 335.76 212.7 335.76 6 Y
7 X
V
0 X
N
274.21 340.35 269.92 335.76 2 L
7 X
V
0 X
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
212.7 410.68 274.21 410.68 274.21 383.16 269.92 383.16 269.92 378.57 212.7 378.57 6 Y
7 X
V
0 X
N
274.21 383.16 269.92 378.57 2 L
7 X
V
0 X
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
55.26 82.21 525.81 203.48 R
7 X
V
4 14 Q
0 X
(Figure 25.) 55.26 194.15 T
5 F
(How to generate a parser module from a syntax specification. The pre-) 119.44 194.15 T
-0.51 (processor) 55.26 177.15 P
2 F
-0.51 (copag) 113.47 177.15 P
5 F
-0.51 ( reads one or more specification modules and translates them into a) 146.9 177.15 P
-0.78 (parser specification in) 55.26 160.15 P
2 F
-0.78 (yacc) 182.43 160.15 P
5 F
-0.78 (format, a scanner specification in) 210.8 160.15 P
2 F
-0.78 (lex) 399.03 160.15 P
5 F
-0.78 ( format, unparse ta-) 416.14 160.15 P
(bles, an unparse function that uses these tables, and a wrapper function for the ex-) 55.26 143.15 T
-1.07 (tension language binding of language specific parse tree constructors. The parse tree) 55.26 126.15 P
-0.83 (abstract data type itself is language independent and is simply linked into the created) 55.26 109.15 P
0 0 0 1 0 0 0 K
55.26 81.48 525.81 87.48 C
0 0 0 1 0 0 0 K
55.26 85.48 289.26 85.48 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 0 1 0 0 0 K
55.26 76.54 525.84 456.38 C
0 0 0 1 0 0 0 K
5 14 Q
0 X
0 0 0 1 0 0 0 K
(module together with a set of wrapper functions for extension language bindings.) 55.26 92.15 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(parse tree) 348.73 242.98 T
(data type) 350.86 229.96 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(extension) 421.47 247.13 T
(language) 422.38 236.47 T
(binding) 427.28 225.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(code) 155.6 420.21 T
(templates) 143.68 410.5 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(parser) 227.87 397.19 T
(spec.) 230.31 387.48 T
(scanner) 223.89 354.37 T
(spec.) 230.31 344.66 T
(unparse) 223.46 316.15 T
(tables) 228.65 306.44 T
(tree constr) 216.12 264.73 T
(.) 267.48 264.73 T
(wrapper) 223.46 255.02 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(unparse) 223.46 291.29 T
(function) 224.07 281.58 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(yacc) 313.55 391.35 T
(lex) 317.83 348.54 T
(C) 405.28 316.23 T
(compiler) 388.47 306.52 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(parser) 476.62 316.23 T
(module) 474.18 306.52 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
59.02 363.91 120.52 363.91 120.52 336.39 116.23 336.39 116.23 331.8 59.02 331.8 6 Y
V
0.5 H
2 Z
N
120.52 336.39 116.23 331.8 2 L
V
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
58.1 366.42 119.6 366.42 119.6 338.9 115.31 338.9 115.31 334.31 58.1 334.31 6 Y
7 X
V
0 X
N
119.6 338.9 115.31 334.31 2 L
7 X
V
0 X
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(language) 66.22 352.97 T
(speci\336cation) 58.59 343.26 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
212.57 300.68 274.08 300.68 2 L
N
212.57 274.68 274.08 274.68 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
378.5 328.2 440 328.2 2 L
4 H
0 Z
3 X
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
168.68 377.96 165.37 366.42 162.07 377.96 165.37 377.96 4 Y
0 X
V
165.37 401.59 165.37 377.96 2 L
0.5 H
N
125.23 354.44 136.77 351.13 125.23 347.83 125.23 351.13 4 Y
V
119.6 351.13 125.23 351.13 2 L
N
205.78 385.59 212.57 395.48 212.05 383.49 208.92 384.54 4 Y
V
198.27 352.66 208.92 384.54 2 L
N
201.04 355.97 212.57 352.66 201.04 349.36 201.04 352.66 4 Y
V
198.27 352.66 201.04 352.66 2 L
N
211.46 324.86 212.57 312.91 205.3 322.46 208.38 323.66 4 Y
V
198.27 349.61 208.39 323.66 2 L
N
282.57 398.78 294.11 395.48 282.57 392.17 282.57 395.48 4 Y
V
274.08 395.48 282.57 395.48 2 L
N
282.57 354.44 294.11 351.13 282.57 347.83 282.57 351.13 4 Y
V
274.08 351.13 282.57 351.13 2 L
N
378.61 324.91 378.5 312.91 372.23 323.14 375.42 324.02 4 Y
V
355.61 395.48 375.42 324.02 2 L
N
375.4 324.51 378.49 312.91 369.73 321.11 372.56 322.81 4 Y
V
355.61 351.13 372.57 322.8 2 L
N
366.96 316.22 378.5 312.91 366.96 309.6 366.96 312.91 4 Y
V
274.08 312.91 366.96 312.91 2 L
N
395.61 291.07 405.66 297.62 400.61 286.74 398.11 288.9 4 Y
V
369.92 256.33 398.12 288.9 2 L
N
412.14 286.74 407.09 297.62 417.14 291.07 414.64 288.9 4 Y
V
442.86 256.33 414.66 288.9 2 L
N
449.92 317.74 461.46 314.44 449.92 311.13 449.92 314.44 4 Y
V
440 314.44 449.92 314.44 2 L
N
135.34 334.67 196.84 366.78 R
7 X
V
2 Z
0 X
N
135.34 365.25 196.84 365.25 2 L
4 H
0 Z
3 X
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 X
(copag) 151.11 347.37 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
391.11 453.54 414.18 453.54 414.18 443.22 412.57 443.22 412.57 441.5 391.11 441.5 6 Y
7 X
V
0.5 H
2 Z
0 X
N
414.18 443.22 412.57 441.5 2 L
7 X
V
0 X
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
391.11 422.83 414.18 434.87 R
7 X
V
0 X
N
391.11 434.3 414.18 434.3 2 L
4 H
0 Z
3 X
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
399.61 414.69 411.14 411.38 399.61 408.07 399.61 411.38 4 Y
0 X
V
391.11 411.38 399.61 411.38 2 L
0.5 H
N
(generator program) 422.68 426.37 T
(data \336le) 422.06 444.22 T
(direction of data \337ow) 422.1 407.37 T
0 0 0 1 0 0 0 K
0 0 595.28 841.89 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "113" 11
%%Page: "114" 12
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
1 14 Q
0 X
0 0 0 1 0 0 0 K
(1) 70.87 746.65 T
(14) 77.88 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Processing design description \336les) 323.84 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(6.5) 70.87 695.16 T
(The generated parser and tree constructor) 97.55 695.16 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 14 Q
(6.5.1) 70.87 655.49 T
(A conceptual schema for parse trees) 105.89 655.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.09 (W) 70.87 626.49 P
0.09 (e have chosen to construct parse trees from generic nodes that are independent of) 82.96 626.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.05 (a particular language syntax \050Figure) 70.87 609.49 B
0.35 0.05 (26\051. Each tree node is associated with a parse) 279.71 609.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.13 (tree. A parse tree not only represents the root of a tree but carries information com-) 70.87 592.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.08 (mon to all the nodes in it. An important property of our parse trees is that the tree) 70.87 575.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.03 (root is associated with all the input text recognized, including all text read over by) 70.87 558.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.01 (the parser) 70.87 541.49 B
0.35 0.01 (. This is necessary because regardless of the \050in-\051 completeness by which) 125.31 541.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0 (the language specif) 70.87 524.49 B
0.35 0 (ication def) 178.97 524.49 B
0.35 0 (ines the lexical properties and syntax of a design f) 238.09 524.49 B
0.35 0 (ile,) 521.07 524.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.16 (the whole \336le is considered syntactically correct and therefore contributes to a com-) 70.87 507.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.03 (plete design description. All text is to be managed by the DIM service. T) 70.87 490.49 B
0.35 0.03 (o achieve) 484.71 490.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.34 (this, we do not read a design \336le byte by byte with stream-i/o functions but use the) 70.87 473.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.21 (virtual memory management facility of) 70.87 456.49 B
0.35 0.21 (fered by all modern operating systems to) 299.76 456.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.27 (map the complete design \336le into virtual memory) 70.87 439.49 P
0.27 (. The individual tree nodes do not) 348.35 439.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.17 (store copies of the lexems they were associated with during parsing. They rather) 70.87 422.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.17 (store the start and end of) 70.87 405.49 P
-0.17 (fsets of their associated text regions in the mapped \336le text.) 207.8 405.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
68.92 76.54 540.52 319.36 C
0 0 0 1 0 0 0 K
277.16 255.94 312.59 310.86 17.72 RR
0.5 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
68.92 78.42 539.47 133.02 R
7 X
V
4 14 Q
0 X
(Figure 26.) 68.92 123.69 T
5 F
(Schema for parse trees. An analysed design file is mapped into virtual) 133.1 123.69 T
(memory and is associated with the tree. Tree nodes only carry the start and end off-) 68.92 106.69 T
0 0 0 1 0 0 0 K
68.92 79.02 539.47 85.02 C
0 0 0 1 0 0 0 K
68.92 83.02 302.92 83.02 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 0 1 0 0 0 K
68.92 76.54 540.52 319.36 C
0 0 0 1 0 0 0 K
5 14 Q
0 X
0 0 0 1 0 0 0 K
(sets into this mapped text.) 68.92 89.69 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
261.63 269.7 293.52 294.5 R
7 X
V
0.5 H
2 Z
0 X
N
0 11 Q
(Start) 233.65 214.17 T
232.87 205.92 257.67 230.72 R
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(End) 278.89 214.17 T
275.39 205.92 301.96 230.72 R
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 320.55 214.17 T
(ag) 326.05 214.17 T
317.9 205.92 340.93 230.72 R
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 357.35 214.17 T
(ype) 363.47 214.17 T
355.11 205.92 383.45 230.72 R
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 182.79 214.17 T
(ree) 189.1 214.17 T
177.95 205.91 209.84 230.72 R
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
142.51 149.22 192.12 174.03 R
N
(Mapped) 147.44 164.4 T
(T) 157.23 152.77 T
(ext) 162.73 152.77 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
208.06 149.22 250.58 174.03 R
N
(File) 220.46 164.4 T
(Name) 214.65 152.77 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
193.89 205.92 229.32 174.03 2 L
N
193.89 205.91 167.32 174.03 2 L
N
277.36 269.7 369.28 230.72 2 L
N
277.36 269.7 328.53 230.72 2 L
N
277.36 269.7 289.56 230.72 2 L
N
277.36 269.7 245.27 230.72 2 L
N
(Node) 264.43 277.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(LineNumber) 404.98 214.17 T
402.94 205.92 466.93 230.72 R
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
277.36 269.7 434.83 230.72 2 L
N
(parent) 315.53 296.26 T
278.93 269.7 195.66 230.72 2 L
N
0 0 0 1 0 0 0 K
0 0 595.28 841.89 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "114" 12
%%Page: "115" 13
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
(6.5 The generated parser and tree constructor) 56.69 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(1) 501.83 746.65 T
(15) 508.84 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6.5.2) 56.69 696.49 T
(Creating a parse tree) 91.72 696.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.14 (The creation of parse tree nodes during parsing is straightforward. A leaf node is) 56.69 667.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.01 (constructed when a lexem is recognized as token in the input. Its start and end val-) 56.69 650.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.29 (ues are determined by the respective start and end of) 56.69 633.49 P
0.29 (fsets in the input \336le. Interme-) 353.4 633.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.28 (diate tree nodes are created when a grammar rule is reduced. They receive the start) 56.69 616.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.06 (value of their left-most child as start and the end value of their right-most child as) 56.69 599.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.05 (end value. Thus all the text lying in between the left-most and the right-most chil-) 56.69 582.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.13 (dren of a tree node is considered to belong to this node, even if there is no child that) 56.69 565.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(actually represents this text.) 56.69 548.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(6.5.3) 56.69 509.49 T
(Nested parser modules) 91.72 509.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.28 (Grammar rules that have the) 56.69 480.49 B
5 F
0.35 0.28 (-syntax) 229.21 480.49 B
2 F
0.35 0.28 ( property do not directly create a tree node) 271.61 480.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.32 (when they are recognized, but delegate its construction to a subordinate parser mod-) 56.69 463.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.13 (ule. For this purpose the parse procedure of the desired parser module is invoked) 56.69 446.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.05 (with the current parse tree as parameter) 56.69 429.49 B
0.35 0.05 (. When the subordinate parser has success-) 280.63 429.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.3 (fully constructed a parse tree for a region of input text, it returns control to the) 56.69 412.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.32 (semantic action of the invoking parser module. There the tree nodes resulting from) 56.69 395.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.12 (the right-hand side of the current grammar rule are discarded and replaced by the) 56.69 378.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(root of the parse tree created by the subordinate parser) 56.69 361.49 T
(.) 360.33 361.49 T
0 0 0 1 0 0 0 K
54.75 76.54 526.35 354.33 C
0 0 0 1 0 0 0 K
205.28 317.13 251.34 341.16 R
7 X
0 0 0 1 0 0 0 K
V
0.5 H
2 Z
0 X
N
0 11 Q
(Rule) 217 331.76 T
(Item) 217.61 320.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54.75 74.51 525.3 147.31 R
7 X
V
4 14 Q
0 X
(Figure 27.) 54.75 137.98 T
5 F
(Schema for the unparse tables. Rules carry their name and a numeric) 118.93 137.98 T
-0.43 (code. An item may either be a literal or optional \050both stored as object of type) 54.75 120.98 P
2 F
-0.43 (Item) 488.41 120.98 P
5 F
-0.43 (\051,) 514.07 120.98 P
-0.67 (or it may be a reference to a subordinate rule. List items carry a separator if one was) 54.75 103.98 P
0 0 0 1 0 0 0 K
54.75 76.54 525.3 82.31 C
0 0 0 1 0 0 0 K
54.75 80.31 288.75 80.31 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 0 1 0 0 0 K
54.75 76.54 526.35 354.33 C
0 0 0 1 0 0 0 K
5 14 Q
0 X
0 0 0 1 0 0 0 K
(specified in the language specification.) 54.75 86.98 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
311.99 258.9 343.88 283.7 R
7 X
V
0.5 H
2 Z
0 X
N
0 11 Q
(Index) 279.23 214.36 T
277.52 206.1 307.86 230.91 R
N
(T) 325.05 214.36 T
(ype) 331.17 214.36 T
321.92 206.1 352.04 230.91 R
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 366.75 214.36 T
(ext) 372.25 214.36 T
364.44 206.1 389.24 230.91 R
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Rule) 230.89 214.36 T
226.26 206.1 258.14 230.9 R
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
241.84 206.52 277.27 186.38 2 L
N
241.84 206.52 215.26 186.38 2 L
N
329.71 258.96 376.84 230.91 2 L
N
329.71 258.96 337.86 230.91 2 L
N
329.71 258.96 293.57 231.32 2 L
N
(Item) 317.24 267.16 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
311.37 283.7 286.77 298.64 2 L
N
329.71 258.96 241.84 230.61 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Separator) 238.38 266.15 T
234.75 257.9 290.32 282.7 R
N
263.74 298.64 263.74 282.7 2 L
N
(Name) 201.48 169.84 T
199.32 161.58 232.98 186.38 R
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Code) 263.24 169.84 T
259.55 161.58 293.21 186.38 R
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
240.71 298.64 286.77 322.68 R
7 X
V
0 X
N
(List) 255.18 313.28 T
(Item) 253.05 302 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
226.25 317.42 M
 215.62 294.92 215.62 294.92 215.62 275.62 D
 215.62 256.33 215.62 256.33 242.2 230.61 D
N
(child) 190.81 267.04 T
0 0 0 1 0 0 0 K
0 0 595.28 841.89 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "115" 13
%%Page: "116" 14
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
1 14 Q
0 X
0 0 0 1 0 0 0 K
(1) 70.87 746.65 T
(16) 77.88 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Processing design description \336les) 323.84 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(6.5.4) 70.87 696.49 T
(Unparsing) 105.89 696.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.09 (W) 70.87 667.49 B
0.35 0.09 (e have chosen to generate one) 83.05 667.49 B
5 F
0.35 0.09 (unparse) 258.76 667.49 B
2 F
0.35 0.09 ( function per parser module that receives) 304.46 667.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.36 (its knowledge about grammar items from two tables,) 70.87 650.49 B
5 F
0.35 0.36 (RuleT) 391.01 650.49 B
0.35 0.36 (able) 424.97 650.49 B
2 F
0.35 0.36 ( and) 450.51 650.49 B
5 F
0.35 0.36 (ItemT) 480.23 650.49 B
0.35 0.36 (able) 513.4 650.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
-0.23 (\050Figure) 70.87 633.49 P
-0.23 (27\051. These tables can be statically created during the run of the speci\336cation) 115.58 633.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.25 (preprocessor) 70.87 616.49 P
5 F
0.25 (copag) 146.14 616.49 P
2 F
0.25 (. An alternative solution would have been to generate one func-) 180.35 616.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.06 (tion per grammar rule. W) 70.87 599.49 P
-0.06 (e favour the table driven approach because it reduces code) 212.19 599.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.11 (size and has less code duplication. The) 70.87 582.49 B
5 F
0.35 0.11 (unparse) 298.67 582.49 B
2 F
0.35 0.11 ( function starts from a rule whose) 344.57 582.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.03 (name is passed as parameter and creates a parse tree node for it. The function then) 70.87 565.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.11 (iterates over the items in the rule. For each item, a child of this parse tree node is) 70.87 548.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(created by the following actions:) 70.87 531.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 85.04 512.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.14 (If the item is a literal, the created child takes the literal text as value of its) 92.13 512.49 P
5 F
-0.14 (text) 504.19 512.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(attribute.) 92.13 495.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 85.04 476.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.66 (For all other item types, the unparse function \336rst checks if a named parameter) 92.13 476.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.71 (has been given to the function that matches this item. A named parameter) 92.13 459.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(matches an item if it is yet unused and) 92.13 442.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(-) 92.13 424.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(if the item is tagged and the parameter name equals the tag, or) 99.21 424.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(-) 92.13 406.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.02 (if the item is a) 99.21 406.49 P
5 F
0.02 (RuleItem) 182.9 406.49 P
2 F
0.02 ( and the parameter name equals the name of the ref-) 233.45 406.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(erenced rule.) 99.21 389.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5.02 (For maximum \337exibility) 92.13 370.49 P
5.02 (, a child node can be created from matching) 238.94 370.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(parameters in one of the following ways:) 92.13 355.5 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(-) 92.13 339.5 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(the parameter text is taken as the node text.) 99.21 339.5 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(-) 92.13 321.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(the parameter denotes a tree created elsewhere which is taken as the child.) 99.21 321.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(-) 92.13 303.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.85 (the parameter denotes a list of DIM objects. A new tree node is created as) 99.21 303.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.63 (child. This child receives the result of evaluating the unparse method on each) 99.21 286.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(object in the list as children.) 99.21 269.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 85.04 250.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(If no matching parameter could be found, two cases are distinguished:) 92.13 250.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(-) 92.13 232.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.57 (the item denotes a list of one or more elements. In this case no child node can) 99.21 232.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(be created automatically. The) 99.21 215.49 T
5 F
(unparse) 268.33 215.49 T
2 F
( functions fails.) 313.44 215.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(-) 92.13 197.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.29 (the item is of type) 99.21 197.49 P
5 F
1.29 (RuleItem) 210.28 197.49 P
2 F
1.29 (. The unparse function calls itself recursively,) 260.82 197.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.37 (passing the rule and the named parameters along. The result of this recursive) 99.21 180.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(call is taken as the new child node.) 99.21 163.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.31 (The overall result of a successful invocation of) 70.87 134.49 P
5 F
-0.31 (unparse) 334.32 134.49 P
2 F
-0.31 ( is a parse tree that is created) 379.43 134.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.16 (according to the syntax of the rule passed to the function with all the variables \336lled) 70.87 117.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.27 (by parameters passed to) 70.87 100.49 P
5 F
0.27 (unparse) 209.57 100.49 P
2 F
0.27 (. A simple preorder traversal writes this tree into a) 254.68 100.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.02 (design f) 70.87 83.49 B
0.35 0.02 (ile. Each node visited during this traversal is checked as to whether its) 115.36 83.49 B
5 F
0.35 0.02 (text) 518.29 83.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "116" 14
%%Page: "117" 15
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
(6.6 Extension language interface) 56.69 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(1) 501.83 746.65 T
(17) 508.84 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.12 (attribute is set. If so, the text is emitted to the f) 56.69 696.49 B
0.35 0.12 (ile and traversal proceeds with the) 326.97 696.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.15 (next sibling. If the) 56.69 679.49 P
5 F
0.15 (text) 163.47 679.49 P
2 F
0.15 ( is not set, traversal proceeds with the children of the current) 183.68 679.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.2 (node. W) 56.69 662.49 P
0.2 (e will present an example of unparsing in our case study of the VHDL lan-) 103.21 662.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(guage.) 56.69 645.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(6.6) 56.69 606.16 T
(Extension language interface) 83.38 606.16 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 14 Q
(6.6.1) 56.69 566.49 T
(Parsing design descriptions) 91.72 566.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.26 (Parse trees are represented by the abstract class) 56.69 537.49 B
5 F
0.35 0.26 (ParseT) 340.9 537.49 B
0.35 0.26 (r) 382.16 537.49 B
0.35 0.26 (ee) 387.35 537.49 B
2 F
0.35 0.26 ( in the extension lan-) 400.31 537.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.09 (guage.) 56.69 520.49 B
2 11.2 Q
0.28 0.09 (*) 94.19 526.09 B
2 14 Q
0.35 0.09 ( The only method that) 99.89 520.49 B
5 F
0.35 0.09 (ParseT) 230.87 520.49 B
0.35 0.09 (r) 271.11 520.49 B
0.35 0.09 (ee) 276.14 520.49 B
2 F
0.35 0.09 ( of) 288.76 520.49 B
0.35 0.09 (fers is the one to retrieve the tree root.) 304.3 520.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.1 (For every parser module linked into the extension language engine there is a sub-) 56.69 503.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.24 (class of type) 56.69 486.49 B
5 F
0.35 0.24 (ParseT) 134.6 486.49 B
0.35 0.24 (r) 175.72 486.49 B
0.35 0.24 (ee) 180.89 486.49 B
2 F
0.35 0.24 (, named after the language specif) 193.81 486.49 B
0.35 0.24 (ication from which this) 387.79 486.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.26 (module was created. For example, our case study for the VHDL language com-) 56.69 469.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.26 (prises of two specif) 56.69 452.49 B
0.35 0.26 (ications, one for the overall structure of VHDL f) 171.36 452.49 B
0.35 0.26 (iles, named) 457.72 452.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 F
0.28 (vhdl) 56.69 435.49 P
2 F
0.28 (, the other one for con\336guration declarations, named) 80.8 435.49 P
5 F
0.28 (con\336g) 380.08 435.49 P
2 F
0.28 (. W) 414.3 435.49 P
0.28 (e therefore have) 433.68 435.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.13 (two subclasses of) 56.69 418.49 B
5 F
0.35 0.13 (ParseT) 161.51 418.49 B
0.35 0.13 (r) 201.95 418.49 B
0.35 0.13 (ee) 207 418.49 B
2 F
0.35 0.13 ( in this example, named) 219.69 418.49 B
5 F
0.35 0.13 (vhdl) 361.36 418.49 B
2 F
0.35 0.13 ( and) 385.97 418.49 B
5 F
0.35 0.13 (conf) 414.52 418.49 B
0.35 0.13 (ig) 438.35 418.49 B
2 F
0.35 0.13 (. Each parser) 449.5 418.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.05 (module contains a) 56.69 401.49 B
5 F
0.35 0.05 (parse) 164.01 401.49 B
2 F
0.35 0.05 ( function that takes as parameter the name of a design f) 195.37 401.49 B
0.35 0.05 (ile) 510.31 401.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.22 (to be parsed and returns a parse tree after a successful parse. These) 56.69 384.49 P
5 F
0.22 (parse) 437.47 384.49 P
2 F
0.22 ( functions) 468.58 384.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.18 (are accessed through the constructors of the corresponding subclasses of) 56.69 367.49 P
5 F
-0.18 (ParseT) 463.87 367.49 P
-0.18 (r) 503.55 367.49 P
-0.18 (ee) 508.48 367.49 P
2 F
-0.18 (.) 520.91 367.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.11 (For example, we create a parse tree from the VHDL f) 56.69 350.49 B
0.35 0.11 (ile dp32.vhdl by issuing the) 364.83 350.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 56.69 333.49 T
(cl command) 64.27 333.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(vhdl t -\336le dp32.vhdl) 77.95 314.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.02 (This command creates a parse tree) 56.69 285.49 B
5 F
0.35 0.02 ( t) 252.35 285.49 B
2 F
0.35 0.02 (. When an error is encountered during parsing,) 260.14 285.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.18 (the constructor fails and no parse tree is created. In this case an error message is) 56.69 268.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.19 (returned as the result of the command. The root node of this tree can be retrieved by) 56.69 251.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(issuing the method) 56.69 234.49 T
5 F
(r) 165.98 234.49 T
(oot) 170.9 234.49 T
2 F
( to the parse tree:) 188.8 234.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(set root [t root]) 77.95 215.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0 (This command assigns the identif) 56.69 186.49 B
0.35 0 (ier of the tree root to the T) 245.7 186.49 B
0.35 0 (cl variable) 395.45 186.49 B
5 F
0.35 0 (r) 458.42 186.49 B
0.35 0 (oot) 463.35 186.49 B
2 F
0.35 0 (. Nodes) 481.26 186.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.13 (have three data members visible from the extension language:) 56.69 169.49 B
5 F
0.35 0.13 (type) 418.2 169.49 B
2 F
0.35 0.13 (,) 442.06 169.49 B
5 F
0.35 0.13 (tag) 449.67 169.49 B
2 F
0.35 0.13 (, and) 467.96 169.49 B
5 F
0.35 0.13 (text) 500.16 169.49 B
2 F
0.35 0.13 (.) 520.91 169.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 F
0.02 (T) 56.69 152.49 P
0.02 (ype) 63.44 152.49 P
2 F
0.02 ( contains an enumeration value that encodes the rule from which this node was) 82.87 152.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.11 (created. The domain of this enumeration is de\336ned by the tree to which a particular) 56.69 135.49 P
0 0 0 1 0 0 0 K
56.69 104.54 524.41 117.54 C
0 0 0 1 0 0 0 K
56.69 112.54 164.69 112.54 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 0 1 0 0 0 K
0 0 595.28 841.89 C
0 0 0 1 0 0 0 K
2 9.6 Q
0 X
0 0 0 1 0 0 0 K
(*.) 74.69 101.34 T
2 12 Q
(\322Abstract class\323 means that the user cannot create objects of this class but only of sub-) 84.29 96.54 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(classes.) 74.69 82.54 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "117" 15
%%Page: "118" 16
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
1 14 Q
0 X
0 0 0 1 0 0 0 K
(1) 70.87 746.65 T
(18) 77.88 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Processing design description \336les) 323.84 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.1 (node belongs. For example, the code 24 is assigned to nodes of type) 70.87 696.49 B
5 F
0.35 0.1 (ar) 466.53 696.49 B
0.35 0.1 (chitectur) 478.65 696.49 B
0.35 0.1 (e) 528.77 696.49 B
2 F
0.35 0.1 (,) 535.08 696.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 1.6 (created by the) 70.87 679.49 B
5 F
0.35 1.6 (vhdl) 177.93 679.49 B
2 F
0.35 1.6 ( parser) 208.43 679.49 B
0.35 1.6 (. The code 24 corresponds to node type) 256.9 679.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 F
0.35 0.25 (block_conf) 70.87 662.49 B
0.35 0.25 (iguration) 133.99 662.49 B
2 F
0.35 0.25 ( for nodes created by the) 188.34 662.49 B
5 F
0.35 0.25 (conf) 338.39 662.49 B
0.35 0.25 (ig) 362.7 662.49 B
2 F
0.35 0.25 ( parser) 374.09 662.49 B
0.35 0.25 (.) 413.11 662.49 B
5 F
0.35 0.25 (T) 420.95 662.49 B
0.35 0.25 (ag) 427.7 662.49 B
2 F
0.35 0.25 ( contains the tag) 442.19 662.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.01 (from a grammar symbol if any was def) 70.87 645.49 B
0.35 0.01 (ined. For example, the) 291.06 645.49 B
5 F
0.35 0.01 (conf) 421.8 645.49 B
0.35 0.01 (ig) 445.17 645.49 B
2 F
0.35 0.01 ( parser assigns) 456.08 645.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.05 (the tag) 70.87 628.49 B
5 F
0.35 0.05 (entityName) 113.19 628.49 B
2 F
0.35 0.05 ( to the node created for the third identif) 177.46 628.49 B
0.35 0.05 (ier of) 401.68 628.49 B
5 F
0.35 0.05 (ar) 436.16 628.49 B
0.35 0.05 (chitectur) 448.19 628.49 B
0.35 0.05 (e_body) 497.9 628.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.26 (nodes. Finally) 70.87 611.49 P
0.26 (,) 149.56 611.49 P
5 F
0.26 (text) 156.82 611.49 P
2 F
0.26 ( contains the text region between the start and end of) 177.04 611.49 P
0.26 (fsets stored) 474.94 611.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.05 (for a particular node. For the root node of a parse tree, this is always the complete) 70.87 594.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(input.) 70.87 577.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(6.6.2) 70.87 538.49 T
(Tree traversal) 105.89 538.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.07 (Once a design f) 70.87 509.49 B
0.35 0.07 (ile is successfully parsed and a parse tree is constructed, the infor-) 159.7 509.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.06 (mation relevant to design information management needs to be extracted from the) 70.87 492.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.05 (tree. For this purpose two methods are de\336ned on tree nodes that allow \337exible tree) 70.87 475.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.21 (queries and traversal from within extension language scripts. As the tree is built) 70.87 458.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.12 (during language parsing by automatically generated code, it contains much detail) 70.87 441.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0 (that is irrelevant to information extraction. The extension language statements take) 70.87 424.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.14 (this into account by allowing to look at \322interesting\323 nodes only) 70.87 407.49 B
0.35 0.14 (. T) 441.42 407.49 B
0.35 0.14 (wo statements) 456.78 407.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(are de\336ned:) 70.87 390.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(rule) 92.13 371.49 T
0 F
( traversal {) 117.8 371.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(node:IDENTIFIER) 107 354.49 T
(\322all\323) 223.7 354.49 T
1 F
(list) 250.92 354.49 T
0 F
( { quali\336er }) 271.15 354.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\322-var\323 var:IDENTIFIER code_block) 107 337.5 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(| node:IDENTIFIER) 99.21 320.49 T
(\322one\323) 223.45 320.49 T
1 F
(list) 260.02 320.49 T
0 F
( { quali\336er }) 280.25 320.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 92.13 303.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(rule) 92.13 285.49 T
0 F
( quali\336er {) 117.8 285.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\322-type\323 type:IDENTIFIER) 107 268.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(| \322-tag\323 tag:IDENTIFIER) 99.21 251.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 92.13 234.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.11 (The f) 70.87 205.49 B
0.35 0.11 (irst variant executes a T) 100.95 205.49 B
0.35 0.11 (cl code block for every node, optionally considering) 237.95 205.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.25 (only those nodes with selected type and tag in the tree rooted at) 70.87 188.49 P
5 F
-0.25 (node) 426.57 188.49 P
2 F
-0.25 (. The node cur-) 453.79 188.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.1 (rently looked at is available in the variable named) 70.87 171.49 B
5 F
0.35 0.1 (var) 362 171.49 B
2 F
0.35 0.1 ( within the code block. The) 380.97 171.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.28 (code block may contain) 70.87 154.49 P
5 F
0.28 (br) 208.84 154.49 P
0.28 (eak) 220.77 154.49 P
2 F
0.28 ( and) 240.2 154.49 P
5 F
0.28 (continue) 267.97 154.49 P
2 F
0.28 ( statements to break out of the traversal) 316.18 154.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.21 (completely or to continue with a sibling of the current node. The second variant) 70.87 137.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.03 (traverses the tree rooted at) 70.87 120.49 B
5 F
0.35 0.03 (node) 224.73 120.49 B
2 F
0.35 0.03 ( and breaks at the f) 252.07 120.49 B
0.35 0.03 (irst node of type) 359.8 120.49 B
5 F
0.35 0.03 (node:IDENTI-) 456.63 120.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FIER) 70.87 103.49 T
2 F
(or fails if no such node exists.) 104.69 103.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "118" 16
%%Page: "119" 17
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
(6.6 Extension language interface) 56.69 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(1) 501.83 746.65 T
(19) 508.84 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.05 (The method on tree nodes that implements these commands realizes the following) 56.69 696.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(algorithm:) 56.69 679.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(if) 77.95 408.49 T
0 F
( \050node type and node tag match inputs\051 {) 86.51 408.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(set T) 85.04 391.49 T
(cl variables for current node type,) 114.61 391.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(current node tag, and current node text) 113.39 374.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(set T) 85.04 357.49 T
(cl variable named by parameter to current node identi\336er) 114.61 357.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(evaluate action code passed as input) 85.04 339.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(if) 85.04 322.49 T
0 F
( \050return code from action evaluation == OK\051 {) 93.59 322.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(if) 113.39 305.49 T
0 F
( \050one\051 {) 121.94 305.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(return) 141.73 288.49 T
0 F
( BREAK;) 182.18 288.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 113.39 271.49 T
1 F
(else) 121.95 271.49 T
0 F
( {) 149.2 271.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(return) 141.73 254.49 T
0 F
( \050return code from action evaluation\051;) 182.18 254.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 113.39 237.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 85.04 220.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(if) 85.04 202.49 T
0 F
( \050node type is list or node has children\051 {) 93.59 202.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(for) 113.39 185.49 T
0 F
( each list element or child {) 132.05 185.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(traverse recursively) 141.73 168.49 T
(,) 262.05 168.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(passing input tags and types, variable name,) 141.73 151.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(action code and) 141.73 134.49 T
6 F
(one) 244.46 134.49 T
0 F
( \337ag) 267.82 134.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 F
(Algorithm 1. Node::traverse) 194.52 653.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(in) 62.69 625.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(set<tags>) 92.74 625.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(tags to be matched against node tag) 174.94 625.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(in) 62.69 597.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(set<types>) 92.74 597.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(types to be matched against node type) 174.94 597.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(in) 62.69 569.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(variable) 92.74 569.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(name) 92.74 555.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 174.94 569.49 T
(cl variable to which to assign the node identi\336er cur-) 182.52 569.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(rently processed) 174.94 555.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(in) 62.69 527.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(action code) 92.74 527.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 174.94 527.49 T
(cl code to evaluate for a node with matching tag and) 182.52 527.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(type) 174.94 513.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(in) 62.69 485.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(one) 92.74 485.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 F
(one) 174.94 485.49 T
2 F
( or) 195.16 485.49 T
5 F
(all) 213.82 485.49 T
2 F
( command) 228.61 485.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(out) 62.69 457.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(success/fail-) 92.74 457.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ure) 92.74 443.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(return code resulting from evaluating the action code) 174.94 457.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
56.69 642.58 56.69 433.08 2 L
V
0.5 H
0 Z
N
86.74 643.08 86.74 432.58 2 L
V
N
168.94 643.08 168.94 432.58 2 L
V
N
494.5 642.58 494.5 433.08 2 L
V
N
56.44 642.83 494.75 642.83 2 L
V
N
56.44 614.83 494.75 614.83 2 L
V
N
56.44 586.83 494.75 586.83 2 L
V
N
56.44 544.83 494.75 544.83 2 L
V
N
56.44 502.83 494.75 502.83 2 L
V
N
56.44 474.83 494.75 474.83 2 L
V
N
56.44 432.83 494.75 432.83 2 L
V
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "119" 17
%%Page: "120" 18
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
1 14 Q
0 X
0 0 0 1 0 0 0 K
(120) 70.87 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Processing design description \336les) 323.84 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(switch) 155.9 696.49 T
0 F
( \050return code from recursive invocation\051 {) 199.47 696.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(case) 155.9 678.49 T
0 F
( OK or CONTINUE:) 187.04 678.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(break) 184.25 661.49 T
0 F
(:) 221.6 661.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(case) 155.9 644.49 T
0 F
( BREAK:) 187.04 644.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(return) 184.25 627.49 T
0 F
( BREAK;) 224.7 627.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(case) 155.9 610.49 T
0 F
( RETURN:) 187.04 610.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(if) 184.25 593.49 T
0 F
( \050node type is list\051 {) 192.81 593.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(insert returned node identi\336er at current list position) 212.6 576.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 184.25 559.49 T
1 F
(else) 192.82 559.49 T
0 F
( {) 220.06 559.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(replace current child with returned node identi\336er) 212.6 542.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 184.25 525.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(break) 184.25 508.49 T
0 F
(;) 221.6 508.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(default) 155.9 491.49 T
0 F
(:) 201.8 491.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(return) 184.25 474.49 T
0 F
( \050return code from recursive invocation\051;) 224.7 474.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 155.9 457.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 127.56 440.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 99.21 422.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 F
0.35 0.1 (Node::traverse) 70.87 376.49 B
2 F
0.35 0.1 ( ef) 157.1 376.49 B
0.35 0.1 (fectively performs a preorder tree traversal, checking each node) 171.89 376.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.13 (visited for matching tag and type. If a matching node is encountered, some T) 70.87 359.5 P
-0.13 (cl vari-) 498.67 359.5 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.13 (ables are set to establish the execution context for the action code, and the action) 70.87 342.5 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.03 (code is evaluated. Depending on the return code of this evaluation, traversal either) 70.87 325.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.28 (continues with the children or list elements of the matching node, or breaks of) 70.87 308.49 B
0.35 0.28 (f) 533.92 308.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.17 (completely and continues with the next sibling of the matching node. By issuing) 70.87 291.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.12 (appropriate) 70.87 274.49 B
5 F
0.35 0.12 (br) 139.97 274.49 B
0.35 0.12 (eak) 152.15 274.49 B
2 F
0.35 0.12 (,) 171.95 274.49 B
5 F
0.35 0.12 (continue) 179.55 274.49 B
2 F
0.35 0.12 (, and) 228.76 274.49 B
5 F
0.35 0.12 (r) 260.93 274.49 B
0.35 0.12 (eturn) 265.98 274.49 B
2 F
0.35 0.12 ( statements within the action code, and by) 296.16 274.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.08 (recursively calling traversal commands from within the action code, the program-) 70.87 257.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.21 (mer is given \336ne control over the exact tree traversal. In the Section) 70.87 240.28 P
-0.21 (6.7, we will see) 451.72 240.28 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.38 (that this f) 70.87 223.28 B
0.35 0.38 (lexibility is in fact needed when we show in detail how to transform) 127.87 223.28 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(VHDL con\336guration declarations into DIM object graphs.) 70.87 206.28 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(6.6.3) 70.87 167.28 T
(Unparsing) 105.89 167.28 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 F
0.35 0.32 (Unparse) 70.87 138.28 B
2 F
0.35 0.32 ( functions are def) 121.31 138.28 B
0.35 0.32 (ined globally in the scope of their parser module. As) 224.91 138.28 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.23 (described above,) 70.87 121.28 B
5 F
0.35 0.23 (unparse) 173.05 121.28 B
2 F
0.35 0.23 ( functions determine the parameters they actually con-) 219.76 121.28 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(sume during a traversal of the rule and item tables.) 70.87 104.28 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "120" 18
%%Page: "121" 19
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
(6.6 Extension language interface) 56.69 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(121) 501.06 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(The following extension language command is de\336ned:) 56.69 696.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(rule) 77.95 677.49 T
0 F
( unparse {) 103.63 677.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(module:IDENTIFIER \322::unparse\323 \322-rule\323 rule:IDENTIFIER) 92.82 660.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(list) 92.82 643.49 T
0 F
( { \322-\323 IDENTIFIER \322{\323 parameter_value \322}\323 }) 113.05 643.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 77.95 625.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(rule) 77.95 607.49 T
0 F
( parameter_value {) 103.63 607.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\322-text\323 LITERAL) 92.82 590.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(|) 85.04 573.49 T
(\322-code\323 tcl_code) 92.57 573.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(|) 85.04 556.49 T
(\322-node\323 node:IDENTIFIER) 92.57 556.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(|) 85.04 539.49 T
(\322-list\323 tcl_code) 92.57 539.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 77.95 522.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
-0.29 (An) 56.69 493.49 P
5 F
-0.29 (unparse) 77.01 493.49 P
2 F
-0.29 ( command is invoked for a speci\336c rule. T) 122.11 493.49 P
-0.29 (ree node creation is controlled) 356.07 493.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(by a keyword that speci\336es a parameter to be either) 56.69 476.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 70.87 457.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(plain text,) 77.95 457.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 70.87 438.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 77.95 438.49 T
(cl code to be evaluated to get some text as result,) 85.53 438.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 70.87 419.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(a tree node identi\336er) 77.95 419.49 T
(, or) 192.87 419.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 70.87 400.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.26 (a piece of T) 77.95 400.49 P
-0.26 (cl code that - evaluated - results in a list of DIM object references.) 142.67 400.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.07 (A list of tree nodes is yielded from this list by evaluating the) 77.95 383.49 P
5 F
-0.07 (unparse) 419.69 383.49 P
2 F
-0.07 ( method) 464.8 383.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(for each of these objects.) 77.95 366.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.03 (For example, a block conf) 56.69 337.5 B
0.35 0.03 (iguration in our VHDL language specif) 204.76 337.5 B
0.35 0.03 (ication is def) 427.46 337.5 B
0.35 0.03 (ined) 500.2 337.5 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(as follows:) 56.69 320.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(rule) 77.95 301.49 T
0 F
( block_con\336guration {) 103.63 301.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\322for\323 implName:IDENTIFIER) 85.04 284.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(list) 113.39 267.49 T
0 F
( { use_clause }) 133.62 267.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(items:) 113.39 250.49 T
1 F
(repeat) 150.72 250.49 T
0 F
( { con\336guration_item }) 192.74 250.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\322end\323 \322for\323 \322;\323) 85.04 233.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 77.95 216.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.12 (A sequence of extension language commands that writes a block conf) 56.69 187.49 B
0.35 0.12 (iguration to) 457.78 187.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(standard output would be) 56.69 170.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(set tree [con\336g::unparse -rule block_con\336guration) 77.95 151.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(-implName { -code $parent_DesignObject Name }) 85.04 134.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(-items { -list set ComponentCon\336gurations } ]) 85.04 117.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
($tree export stdout) 77.95 99.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "121" 19
%%Page: "122" 20
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
1 14 Q
0 X
0 0 0 1 0 0 0 K
(122) 70.87 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Processing design description \336les) 323.84 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
-0.26 (The) 70.87 696.49 P
5 F
-0.26 (unparse) 95.87 696.49 P
2 F
-0.26 ( function de\336ned in the) 140.98 696.49 P
5 F
-0.26 (con\336g) 273.04 696.49 P
2 F
-0.26 ( parse module is invoked. The implemen-) 307.25 696.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.03 (tation name is found by evaluating the method) 70.87 679.49 B
5 F
0.35 0.03 (Name) 338.73 679.49 B
2 F
0.35 0.03 ( on the object stored in varia-) 371.51 679.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.01 (ble) 70.87 662.49 B
5 F
0.35 0.01 (par) 91.86 662.49 B
0.35 0.01 (ent_DesignObject) 110.82 662.49 B
2 F
0.35 0.01 (. Component conf) 212.07 662.49 B
0.35 0.01 (igurations are f) 312.88 662.49 B
0.35 0.01 (illed in by evaluating the) 397.72 662.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 F
0.35 0.25 (unparse) 70.87 645.49 B
2 F
0.35 0.25 ( methods on all the objects stored in the variable) 117.71 645.49 B
5 F
0.35 0.25 (ComponentConf) 408.37 645.49 B
0.35 0.25 (igura-) 502.59 645.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.06 (tions) 70.87 628.49 B
2 F
0.35 0.06 (. Note that no parameter has to be given for the list of) 98.4 628.49 B
5 F
0.35 0.06 (use_clauses) 409.73 628.49 B
2 F
0.35 0.06 ( as this list) 477.28 628.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(may have zero or more elements.) 70.87 611.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(6.7) 70.87 572.16 T
(Case study: VHDL) 97.55 572.16 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 14 Q
(6.7.1) 70.87 532.49 T
(The language) 105.89 532.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
-0.15 (VHDL is a mixed level design description language originally conceived as simula-) 70.87 503.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.11 (tor input language. As such its semantics as def) 70.87 486.49 B
0.35 0.11 (ined in the VHDL language refer-) 343.55 486.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.02 (ence manual [VHDL) 70.87 469.49 B
0.35 0.02 (87] is def) 192.82 469.49 B
0.35 0.02 (ined in terms of simulation behaviour) 245.83 469.49 B
0.35 0.02 (. As top-down) 457.91 469.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.3 (design gains importance however) 70.87 452.49 B
0.35 0.3 (, synthesizable subsets have been def) 268.52 452.49 B
0.35 0.3 (ined and) 488.29 452.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.23 (implemented as input language for synthesis tools. VHDL supports design descrip-) 70.87 435.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(tion in behavioural and structural domains.) 70.87 418.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.31 (VHDL provides a good case study of our speci\336cation language for the following) 85.04 399.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(reasons:) 70.87 382.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 85.04 363.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.34 (VHDL is important. Almost all ECAD vendors support VHDL input to their) 92.13 363.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.46 (design tools, be it high-level synthesis systems, mixed-level simulators from) 92.13 346.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.55 (algorithmic down to gate-level, or even systems for hardware-software co-) 92.13 329.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(design [Heusinger) 92.13 312.49 T
(93].) 197.88 312.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 85.04 293.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.83 (VHDL is syntactically complex. VHDL has a rather irregular) 92.13 293.49 P
1.83 (, handcrafted) 449.5 293.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.09 (syntax, tailored to the conception by designers, not by machines. This is why) 92.13 276.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(it is a good benchmark for our speci\336cation language.) 92.13 259.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 85.04 240.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.35 (VHDL is semantically complex. VHDL inherits from ADA constructs of a) 92.13 240.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.38 (modern, structured programming language like modularization, abstract data) 92.13 223.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.16 (types, a rich type system, and polymorphism. It adds its own concepts to) 92.13 206.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.23 (describe hardware speci\336c data types, concurrency) 92.13 189.49 P
1.23 (, module generation, and) 381.92 189.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(composition hierarchies.) 92.13 172.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 85.04 153.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3.91 (VHDL has built-in design management features. The language of) 92.13 153.49 P
3.91 (fers a) 489.8 153.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3.1 (concept of dynamic con\336gurations, which is unusual for a programming) 92.13 136.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.61 (language, but very useful during the design and test of electronic circuits on) 92.13 119.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
8.63 (various levels of detail. The designer can \336rst create alternative) 92.13 102.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "122" 20
%%Page: "123" 21
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
(6.7 Case study: VHDL) 56.69 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(123) 501.06 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
1.94 (implementations of a design entity and decide later which one to use at a) 77.95 696.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(certain place in her design.) 77.95 679.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.24 (In this section we will see how our specif) 56.69 650.49 B
0.35 0.24 (ication language can be used to def) 300.45 650.49 B
0.35 0.24 (ine) 506.83 650.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.32 (those parts of VHDL that are relevant to design information management. It is) 56.69 633.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.2 (important to note that we do not attempt to give an exact and complete syntax de\336-) 56.69 616.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.18 (nition of VHDL. This ef) 56.69 599.49 B
0.35 0.18 (fort would be rather pointless as complete VHDL gram-) 198.4 599.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.22 (mars exist for parser generators like) 56.69 582.49 B
5 F
0.35 0.22 (yacc) 271.77 582.49 B
2 F
0.35 0.22 (. Our goal is rather to give a minimum) 298.31 582.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.45 (specif) 56.69 565.49 B
0.35 0.45 (ication of VHDL that is nevertheless lar) 92.05 565.49 B
0.35 0.45 (ge enough to digest a complete) 335.82 565.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.12 (VHDL f) 56.69 548.49 B
0.35 0.12 (ile and extract important structural information from it. The specif) 104.04 548.49 B
0.35 0.12 (ication) 485.58 548.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.17 (will accept a language that is lar) 56.69 531.49 B
0.35 0.17 (ger then VHDL, that is, a f) 244.69 531.49 B
0.35 0.17 (ile accepted by a lan-) 400.67 531.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.14 (guage processor generated from our specif) 56.69 514.49 B
0.35 0.14 (ication need not be a valid VHDL f) 301.94 514.49 B
0.35 0.14 (ile.) 506.47 514.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.03 (W) 56.69 497.49 B
0.35 0.03 (e assume that a proper syntactical and semantical analysis of design f) 68.82 497.49 B
0.35 0.03 (iles will be) 461.89 497.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.14 (done by a dedicated design tool and need not be the task of a framework service.) 56.69 480.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.02 (This assumption radically simplif) 56.69 463.49 B
0.35 0.02 (ies our language processors and makes it feasible) 245.42 463.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(for a tool integrator to write processors for languages as complex as VHDL.) 56.69 446.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.38 (The primary design abstraction in VHDL is the design entity) 70.87 427.49 P
0.38 (. An) 413.62 427.49 P
5 F
0.38 (entity declara-) 441.99 427.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.21 (tion) 56.69 410.49 P
2 F
-0.21 ( de\336nes the interface between a given design entity and the system in which it is) 78.48 410.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.27 (used. An) 56.69 393.49 P
5 F
0.27 (ar) 110.51 393.49 P
0.27 (chitectur) 122.44 393.49 P
0.27 (e body) 171.69 393.49 P
2 F
0.27 ( speci\336es the implementation of a design entity in terms) 208.9 393.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.03 (of the relationships between its inputs and outputs. There may be multiple) 56.69 376.49 P
5 F
-0.03 (ar) 474.39 376.49 P
-0.03 (chitec-) 486.31 376.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.07 (tur) 56.69 359.5 P
0.07 (e bodies) 72.51 359.5 P
2 F
0.07 ( de\336ned for a given) 118.85 359.5 P
5 F
0.07 (entity declaration) 231.54 359.5 P
2 F
0.07 (. The selection of a speci\336c imple-) 330.77 359.5 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(mentation for a design entity is handled by) 56.69 342.5 T
5 F
(con\336guration declarations) 299.34 342.5 T
2 F
(.) 448.29 342.5 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.79 (Concurrent statements are used in architecture bodies to de\336ne interconnected) 70.87 323.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.06 (blocks and processes that jointly describe the overall behaviour or structure of a de-) 56.69 306.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.29 (sign. Concurrent statements come in various forms, notably) 56.69 289.49 P
5 F
2.29 (block statements) 412.51 289.49 P
2 F
2.29 ( to) 507.73 289.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.38 (group other concurrent statements and) 56.69 272.49 P
5 F
-0.38 (pr) 272.92 272.49 P
-0.38 (ocess statements) 284.85 272.49 P
2 F
-0.38 (which represent single in-) 380.52 272.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.74 (dependent sequential processes. Other concurrent statements exist for commonly oc-) 56.69 255.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.21 (curring forms of processes as well as for representing structural decomposition and) 56.69 238.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(regular descriptions.) 56.69 221.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.5 (VHDL provides a rich type system encompassing scalar) 70.87 202.49 P
0.5 (, composite, access, and) 388.38 202.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.72 (\336le types much like ADA.) 56.69 185.49 P
5 F
0.72 (Subpr) 211.15 185.49 P
0.72 (ograms) 244.08 185.49 P
2 F
0.72 ( may be used to de\336ne algorithms. Object) 286.08 185.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.47 (types provided are) 56.69 168.49 P
5 F
-0.47 (constants) 162.21 168.49 P
2 F
-0.47 (,) 215.11 168.49 P
5 F
-0.47 (signals) 221.64 168.49 P
2 F
-0.47 (, and) 261.32 168.49 P
5 F
-0.47 (variables) 291.1 168.49 P
2 F
-0.47 (. Objects may be associated with) 343.21 168.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.06 (prede\336ned or user) 56.69 151.49 P
2.06 (-de\336ned) 161.6 151.49 P
5 F
2.06 (attributes) 213.04 151.49 P
2 F
2.06 (. Object and subprogram de\336nitions may be) 266.71 151.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.19 (grouped into packages, realizing an abstract data type.) 56.69 134.49 P
5 F
2.19 (Entity) 381.34 134.49 P
2 F
2.19 (,) 413.87 134.49 P
5 F
2.19 (con\336guration) 423.06 134.49 P
2 F
2.19 ( and) 498.51 134.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 F
0.09 (package declarations) 56.69 117.49 P
2 F
0.09 ( as well as) 176.93 117.49 P
5 F
0.09 (ar) 238.73 117.49 P
0.09 (chitectur) 250.66 117.49 P
0.09 (e) 299.91 117.49 P
2 F
0.09 ( and) 306.13 117.49 P
5 F
0.09 (package bodies) 333.53 117.49 P
2 F
0.09 ( may be independ-) 420.32 117.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ently analysed and inserted into a) 56.69 100.49 T
5 F
(design library) 247.22 100.49 T
2 F
(.) 325.26 100.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "123" 21
%%Page: "124" 22
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
1 14 Q
0 X
0 0 0 1 0 0 0 K
(124) 70.87 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Processing design description \336les) 323.84 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(6.7.2) 70.87 696.49 T
(Syntax specification) 105.89 696.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0 (Our language specif) 70.87 667.49 B
0.35 0 (ication for VHDL consists of two modules. The f) 183.63 667.49 B
0.35 0 (irst module is) 461.59 667.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.19 (concerned with the overall language structure. The granularity is coarse, leaving) 70.87 650.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.27 (much detail unresolved. Nevertheless, this module describes enough of the lan-) 70.87 633.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.05 (guage syntax to recognize the text regions that are to be associated with objects in) 70.87 616.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(design information management.) 70.87 599.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(syntax) 92.13 580.49 T
0 F
( vhdl {) 136.48 580.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(token) 99.21 563.49 T
0 F
( comment) 136.55 563.49 T
1 F
(-ignore) 201.9 563.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(-pattern) 269.29 563.49 T
0 F
( <\322--\323 .* $>) 321.4 563.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(token) 99.21 545.49 T
0 F
( ID) 136.55 545.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(-pattern) 269.29 545.49 T
0 F
( <[_a-zA-Z0-9]+>) 321.4 545.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(token) 99.21 527.49 T
0 F
( USE) 136.55 527.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(-pattern) 269.29 527.49 T
0 F
( <\322use\323 [^;]* \322;\323>) 321.4 527.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(token) 99.21 509.49 T
0 F
( LIBRAR) 136.55 509.49 T
(Y) 190.76 509.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(-pattern) 269.29 509.49 T
0 F
( <\322library\323 [^;]* \322;\323>) 321.4 509.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(token) 99.21 491.49 T
0 F
( END) 136.55 491.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(-pattern) 269.29 491.49 T
0 F
( <\322end\323 [^;]* \322;\323>) 321.4 491.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(rule) 99.21 455.49 T
0 F
( design_\336le {) 124.89 455.49 T
1 F
(repeat) 208.16 455.49 T
0 F
( { toplevel } }) 250.17 455.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
-0.14 (rule) 99.21 437.49 P
0 F
-0.14 ( toplevel { LIBRAR) 124.89 437.49 P
-0.14 (Y | USE | entity | architecture | package | con\336g }) 239.39 437.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(} // syntax vhdl) 92.13 419.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.1 (A design f) 70.87 390.49 B
0.35 0.1 (ile contains at least one top-level design unit. In addition, there may be) 130.16 390.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.28 (directives to include external libraries and selected objects from these libraries into) 70.87 373.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.03 (the scope of the design \336le. Most of the detail speci\336ed in the top-level design units) 70.87 356.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.02 (can safely be ignored for design information management. Their names are impor-) 70.87 339.5 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(tant, however) 70.87 322.49 T
(.) 146.3 322.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(rule) 92.13 303.49 T
0 F
( entity { \322entity\323 Name:ID <\134n> guts <\134n> END }) 117.8 303.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(rule) 92.13 285.49 T
0 F
( architecture { \322architecture\323 Name:ID ID EntityName:ID guts END }) 117.8 285.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(rule) 92.13 267.49 T
0 F
( package { \322package\323 guts END }) 117.8 267.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(rule) 92.13 249.49 T
0 F
( guts {) 117.8 249.49 T
1 F
(list) 160.61 249.49 T
0 F
( { item | ID } }) 180.84 249.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.22 (In the rule for entities we have included export directives \050the two patterns \322<\134n>\323\051) 70.87 220.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.21 (to show their use. The rule) 70.87 203.49 B
5 F
0.35 0.21 (guts) 231.77 203.49 B
2 F
0.35 0.21 ( collectively describes all the internals of design) 255.97 203.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(units.) 70.87 186.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "124" 22
%%Page: "125" 23
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
(6.7 Case study: VHDL) 56.69 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(125) 501.06 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.02 (While we completely ignore special characters \050remember that the generated scan-) 56.69 696.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.17 (ner is instructed to read over all text for which it has no explicit pattern\051, certain) 56.69 679.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(keywords and identi\336ers have to be distinguished to \336nd component declarations.) 56.69 662.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(rule) 77.95 643.49 T
0 F
( item {) 103.63 643.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\322procedure\323 guts END) 92.82 626.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(| \322function\323 guts END) 85.04 609.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(| \322units\323 guts END) 85.04 592.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(| \322record\323 guts END) 85.04 575.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(| \322block\323 guts END) 85.04 558.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(| \322generate\323 guts END) 85.04 541.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(| \322process\323 guts END) 85.04 524.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(| \322case\323 guts END) 85.04 507.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(| \322if\323 guts END) 85.04 490.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(| \322loop\323 guts END) 85.04 473.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(| USE) 85.04 456.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(| component) 85.04 439.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 77.95 422.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(rule) 77.95 404.49 T
0 F
( component { \322component\323 Name:ID guts END }) 103.63 404.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.14 (Although the granularity at which the top-level specif) 56.69 375.49 B
0.35 0.14 (ication module is written is) 366.69 375.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.08 (suf) 56.69 358.5 B
0.35 0.08 (f) 73.79 358.5 B
0.35 0.08 (icient to locate design units and extract their names, it is too coarse to analyse) 77.77 358.5 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.1 (con\336guration declarations. In fact, we need all the details from a con\336guration dec-) 56.69 341.5 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.27 (laration, so the speci\336cation module for con\336gurations is written at a very \336ne gran-) 56.69 324.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.07 (ularity) 56.69 307.49 B
0.35 0.07 (. Conf) 92.81 307.49 B
0.35 0.07 (iguration declarations are introduced with the keyword) 127.79 307.49 B
5 F
0.35 0.07 (conf) 444.59 307.49 B
0.35 0.07 (iguration) 468.18 307.49 B
2 F
0.35 0.07 (,) 520.91 307.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0 (so a rule with this single keyword as right-hand-side provides a suitable anchor for) 56.69 290.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(invoking the con\336g speci\336cation:) 56.69 273.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(rule) 77.95 254.49 T
0 F
( con\336g) 103.63 254.49 T
1 F
(-syntax) 148.76 254.49 T
0 F
( { \322con\336guration\323 }) 197.78 254.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.48 (Structural implementations can declare a component specif) 56.69 225.49 B
0.35 0.48 (ication and create) 416.77 225.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.13 (instances of components. A component thus declared can be thought of as a tem-) 56.69 208.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.42 (plate for a design entity) 56.69 191.49 B
0.35 0.42 (. The binding of an entity to this template is achieved) 199.91 191.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.24 (through a conf) 56.69 174.49 B
0.35 0.24 (iguration declaration. The declaration can also be used to specify) 141.65 174.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.08 (actual generic constants for components and blocks. So the conf) 56.69 157.49 B
0.35 0.08 (iguration declara-) 423.59 157.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.34 (tion plays a pivotal role in or) 56.69 140.49 P
-0.34 (ganizing a design description in preparation for simula-) 216.15 140.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(tion or other processing.) 56.69 123.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "125" 23
%%Page: "126" 24
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
1 14 Q
0 X
0 0 0 1 0 0 0 K
(126) 70.87 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Processing design description \336les) 323.84 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
-0.23 (The declarative part of a con\336guration declaration allows the con\336guration to use) 85.04 696.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.04 (items from libraries and packages. The outermost block con\336guration in the con\336g-) 70.87 679.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.31 (uration declaration de\336nes the con\336guration for an architecture of the named entity) 70.87 662.49 P
-0.31 (.) 531.9 662.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(syntax) 92.13 643.49 T
0 F
( con\336g {) 136.48 643.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(token) 99.21 626.49 T
0 F
( comment) 136.55 626.49 T
1 F
(-ignore) 201.9 626.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(-pattern) 269.29 626.49 T
0 F
( <\322--\323 .* $>) 321.4 626.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(token) 99.21 608.49 T
0 F
( IDENTIFIER) 136.55 608.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(-pattern) 269.29 608.49 T
0 F
( <[_a-zA-Z] [_a-zA-Z0-9]*>) 321.4 608.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(rule) 99.21 572.49 T
0 F
( con\336guration_declaration {) 124.89 572.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\322con\336guration\323 con\336gName:IDENTIFIER) 107 555.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\322of\323 interfaceName:IDENTIFIER \322is\323) 107 538.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(list) 127.56 521.49 T
0 F
( { use_clause } block_con\336guration) 147.79 521.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\322end\323) 107 504.49 T
1 F
(opt) 143.56 504.49 T
0 F
( { IDENTIFIER } \322;\323) 165.33 504.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 99.21 487.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(} // syntax con\336g) 92.13 470.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.16 (Note that a nested specif) 70.87 441.49 B
0.35 0.16 (ication module is completely self-contained. W) 213.05 441.49 B
0.35 0.16 (e have to) 486.09 441.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.03 (specify a fresh set of comment conventions, tokens, keywords, and special charac-) 70.87 424.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ters for each module we de\336ne.) 70.87 407.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.64 (W) 85.04 388.49 P
-0.64 (ithin the block con\336guration for an architecture, the submodules of the architec-) 97.69 388.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.51 (ture may be con\336gured. These submodules include blocks and component instances.) 70.87 371.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.26 (A block is con\336gured with a nested block con\336guration. Where a sub-module is an) 70.87 354.5 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.16 (instance of a component, a component con\336guration is used to bind an entity to the) 70.87 337.5 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.67 (component instance. Note the extensive use of tags on rule items. W) 70.87 320.49 P
-0.67 (e will see shortly) 445.33 320.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(how these are used in both import and export speci\336cations.) 70.87 303.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(rule) 92.13 284.49 T
0 F
( block_con\336guration {) 117.8 284.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\322for\323 implName:IDENTIFIER) 107 267.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(list) 127.56 250.49 T
0 F
( { use_clause }) 147.79 250.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(items:) 127.56 233.49 T
1 F
(list) 164.9 233.49 T
0 F
( { con\336guration_item }) 185.13 233.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\322end\323 \322for\323 \322;\323) 107 216.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 92.13 199.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(rule) 92.13 181.49 T
0 F
( con\336guration_item {) 117.8 181.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(block_con\336guration) 107 164.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(| component_con\336guration) 99.21 147.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 92.13 130.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "126" 24
%%Page: "127" 25
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
(6.7 Case study: VHDL) 56.69 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(127) 501.06 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(rule) 77.95 696.49 T
0 F
( component_con\336guration {) 103.63 696.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\322for\323 component_speci\336cation) 92.82 679.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(binding:) 113.39 662.49 T
1 F
(opt) 162.41 662.49 T
0 F
( { \322use\323 binding_indication \322;\323 }) 184.18 662.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(block:) 113.39 645.49 T
1 F
(opt) 149.95 645.49 T
0 F
( { block_con\336guration }) 171.72 645.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(  \322end\323 \322for\323 \322;\323) 85.04 628.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 77.95 611.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(rule) 77.95 593.49 T
0 F
( component_speci\336cation {) 103.63 593.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(instantiation_list \322:\323 componentName:IDENTIFIER) 92.82 576.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 77.95 559.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(rule) 77.95 541.49 T
0 F
( instantiation_list {) 103.63 541.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(repeat) 92.82 524.49 T
(-separator) 138.73 524.49 T
0 F
( \322,\323 { instanceName:IDENTIFIER }) 207.19 524.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(| \322others\323) 85.04 507.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(| \322all\323) 85.04 490.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 77.95 473.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(rule) 77.95 455.49 T
0 F
( binding_indication {) 103.63 455.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(entity_aspect) 92.82 438.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(opt) 113.39 421.49 T
0 F
( { \322generic\323 \322map\323 association_list }) 135.16 421.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(opt) 113.39 404.49 T
0 F
( { \322port\323 \322map\323 association_list }) 135.16 404.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 77.95 387.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(rule) 77.95 369.5 T
0 F
( entity_aspect {) 103.63 369.5 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\322entity\323 \322work.\323 childInterfaceName:IDENTIFIER) 92.82 352.5 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(opt) 92.82 335.5 T
0 F
( { \322\050\322 childImplName:IDENTIFIER \322\051\323 }) 114.59 335.5 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(| \322con\336guration\323 \322work.\323 childCon\336gName:IDENTIFIER) 85.04 318.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(| \322open\323) 85.04 301.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 77.95 284.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(rule) 77.95 266.49 T
0 F
( use_clause { \322use\323 \322;\323 }) 103.63 266.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(rule) 77.95 248.49 T
0 F
( association_list { \322\050\322 \322\051\323 }) 103.63 248.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(6.7.3) 56.69 209.49 T
(Import: Creating objects during parse tree traversal) 91.72 209.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.02 (In Section) 56.69 180.28 B
0.35 0.02 (6.7.2 we have given the language specif) 117.97 180.28 B
0.35 0.02 (ication for VHDL conf) 344.17 180.28 B
0.35 0.02 (iguration) 473.64 180.28 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.28 (declarations. Now we want to use this speci\336cation as the basis for parsing a con\336g-) 56.69 163.28 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.13 (uration declaration, such as the test bench conf) 56.69 146.07 B
0.35 0.13 (iguration of Figure) 326.87 146.07 B
0.35 0.13 (14 on page) 439.53 146.07 B
0.35 0.13 (76,) 506.64 146.07 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.09 (into the corresponding graph of objects according to the DIM conceptual schema.) 56.69 129.07 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.19 (T) 56.69 112.07 B
0.35 0.19 (o achieve this, we write an extension language script that traverses a parse tree) 64.46 112.07 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.06 (automatically created by the VHDL parser module, and creates the DIM objects via) 56.69 95.07 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "127" 25
%%Page: "128" 26
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
1 14 Q
0 X
0 0 0 1 0 0 0 K
(128) 70.87 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Processing design description \336les) 323.84 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.09 (extension language commands bound to the DIM PI as soon as enough information) 70.87 696.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.15 (is available to f) 70.87 679.49 B
0.35 0.15 (ill all attribute values of the created objects. Apart from the parse) 159.67 679.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(tree, no data structure is necessary) 70.87 662.49 T
(.) 262.01 662.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.54 (W) 85.04 643.49 P
0.54 (e assume that the node identi\336er of the tree root has been assigned to variable) 97.14 643.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 F
(tr) 70.87 626.49 T
(ee) 79.69 626.49 T
2 F
( by the following statement) 92.12 626.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(set tree [[vhdl T -\336le dp32.vhdl] root]) 92.13 607.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
($tree) 92.13 571.49 T
1 F
(all) 127.92 571.49 T
(-type) 147.38 571.49 T
0 F
( con\336guration_declaration) 180.83 571.49 T
1 F
(-var) 345.02 571.49 T
0 F
( n1 {) 370.7 571.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
($n1) 127.56 554.49 T
1 F
(one) 154.8 554.49 T
(-tag) 183.59 554.49 T
0 F
( con\336gName) 209.25 554.49 T
1 F
(-type) 291.72 554.49 T
0 F
( IDENTIFIER {) 325.17 554.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(set con\336gName $text }) 155.9 537.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
($n1) 127.56 520.49 T
1 F
(one) 154.8 520.49 T
(-tag) 183.59 520.49 T
0 F
( interfaceName) 209.25 520.49 T
1 F
(-type) 308.06 520.49 T
0 F
( IDENTIFIER {) 341.51 520.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(set interfaceName $text }) 155.9 503.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
($n1) 127.56 486.49 T
1 F
(one) 154.8 486.49 T
(-type) 183.59 486.49 T
0 F
( block_con\336guration n2 {) 217.03 486.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(doBlockCon\336g \134) 155.9 469.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
($n2 $interfaceName $interfaceName $con\336gName) 184.25 452.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 127.56 435.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 92.13 418.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.11 (This top-level loop f) 70.87 389.49 B
0.35 0.11 (inds all nodes of type) 188.13 389.49 B
5 F
0.35 0.11 (conf) 315.63 389.49 B
0.35 0.11 (iguration_declaration) 339.39 389.49 B
2 F
0.35 0.11 (, extracts the) 465.33 389.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.07 (conf) 70.87 372.49 B
0.35 0.07 (iguration name and the name of the associated interface from them, and proc-) 95.24 372.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.28 (esses the single block conf) 70.87 355.5 B
0.35 0.28 (iguration contained in them by calling the procedure) 228.34 355.5 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 F
-0.1 (doBlockCon\336g) 70.87 338.5 P
2 F
-0.1 (. Con\336guration declarations always contain a single block con\336gura-) 154.08 338.5 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.07 (tion which conf) 70.87 321.49 B
0.35 0.07 (igures an architecture body) 159.79 321.49 B
0.35 0.07 (. The other two) 313.94 321.49 B
5 F
0.35 0.07 (one) 405.56 321.49 B
2 F
0.35 0.07 (-statements identify) 426 321.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.01 (the individual identi\336ers found in a con\336guration declaration by checking their tags) 70.87 304.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.22 (and exploiting the fact that the text of a matching node can be directly accessed) 70.87 287.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.43 (through the text variable from within the action code. No node identif) 70.87 270.49 B
0.35 0.43 (iers are) 494.41 270.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(required.) 70.87 253.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "128" 26
%%Page: "129" 27
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
(6.7 Case study: VHDL) 56.69 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(129) 501.06 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(The procedure) 56.69 696.49 T
5 F
(doBlockCon\336g) 141.43 696.49 T
2 F
( has the following code:) 224.65 696.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(proc) 77.95 481.49 T
0 F
( doBlockCon\336g {n1 path interfaceName con\336gName} {) 108.29 481.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(set) 85.04 464.49 T
0 F
( C [Con\336guration) 105.27 464.49 T
1 F
(#auto) 214.2 464.49 T
0 F
( -Name $con\336gName]) 251.54 464.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
($n1) 85.04 430.49 T
1 F
(one -tag) 112.28 430.49 T
0 F
( implName) 166.73 430.49 T
1 F
(-type) 237.51 430.49 T
0 F
( IDENTIFIER {) 270.96 430.49 T
1 F
(set) 365.1 430.49 T
0 F
( implName $text }) 385.33 430.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
($n1) 85.04 396.49 T
1 F
(all -type) 112.28 396.49 T
0 F
( component_con\336guration) 165.19 396.49 T
1 F
( -var) 326.27 396.49 T
0 F
( n2 {) 355.84 396.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
($n2) 113.39 379.49 T
1 F
(one -tag) 140.63 379.49 T
0 F
( componentName) 195.08 379.49 T
1 F
(-type) 309.46 379.49 T
0 F
( IDENTIFIER {) 342.9 379.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(set) 141.73 361.49 T
0 F
( componentName $text }) 161.96 361.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
($n2) 113.39 344.49 T
1 F
(one -type) 140.63 344.49 T
0 F
( entity_aspect) 202.86 344.49 T
1 F
(-var) 293.13 344.49 T
0 F
( n3 {) 318.81 344.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
($n3) 141.73 327.49 T
1 F
(one -tag) 168.98 327.49 T
0 F
( childInterfaceName) 223.42 327.49 T
1 F
(-type) 351.8 327.49 T
0 F
( IDENTIFIER {) 385.25 327.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(set) 170.08 310.49 T
0 F
( childInterfaceName $text) 190.31 310.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 141.73 293.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(set) 141.73 276.49 T
0 F
( childImplName \322\323) 161.96 276.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(catch) 141.73 259.49 T
0 F
( { $n3) 178.3 259.49 T
1 F
(one -tag) 218 259.49 T
0 F
( childImplName) 272.45 259.49 T
1 F
(-type) 372.8 259.49 T
0 F
( IDENTIFIER {) 406.25 259.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(set) 198.43 242.49 T
0 F
( childImplName .$text) 218.65 242.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}}) 141.73 225.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 113.39 208.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 F
(Algorithm 2. doBlockCon\336g) 206.8 670.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(in) 62.69 642.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(n1) 96.71 642.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(identi\336er of a block con\336guration) 241.27 642.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(in) 62.69 614.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(path) 96.71 614.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(list of objects that represent) 241.27 614.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(the current nesting level) 241.27 600.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(in) 62.69 572.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(interfaceName) 96.71 572.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(name of the interface of this block) 241.27 572.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(in) 62.69 544.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(con\336gurationName) 96.71 544.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(name of the outermost con\336guration declaration) 241.27 544.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(out) 62.69 516.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(con\336guration identi\336er) 96.71 516.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(the identi\336er of the block con\336guration created) 241.27 516.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
56.69 659.58 56.69 506.08 2 L
V
0.5 H
0 Z
N
90.71 660.08 90.71 505.58 2 L
V
N
235.27 660.08 235.27 505.58 2 L
V
N
519.89 659.58 519.89 506.08 2 L
V
N
56.44 659.83 520.14 659.83 2 L
V
N
56.44 631.83 520.14 631.83 2 L
V
N
56.44 589.83 520.14 589.83 2 L
V
N
56.44 561.83 520.14 561.83 2 L
V
N
56.44 533.83 520.14 533.83 2 L
V
N
56.44 505.83 520.14 505.83 2 L
V
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "129" 27
%%Page: "130" 28
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
1 14 Q
0 X
0 0 0 1 0 0 0 K
(130) 70.87 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Processing design description \336les) 323.84 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(catch) 127.56 696.49 T
0 11.2 Q
(*) 164.13 702.09 T
0 14 Q
( {) 168.48 696.49 T
1 F
(unset) 180.94 696.49 T
0 F
( CC }) 218.28 696.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
($n2) 127.56 679.49 T
1 F
(all -type) 154.8 679.49 T
0 F
( block_con\336guration) 207.71 679.49 T
1 F
(-var) 336.1 679.49 T
0 F
( n3 {) 361.78 679.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(set) 155.9 662.49 T
0 F
( nestedC [doBlockCon\336g) 176.13 662.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
($n3 $path.$implName) 184.25 645.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
($childInterfaceName $con\336gName]) 184.25 628.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(if) 155.9 611.49 T
0 F
( {$childImplName != \322\323} {) 164.46 611.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(# check whether the block con\336guration just created) 184.25 594.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(# is for childImpl) 184.25 577.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
($n3) 184.25 560.49 T
1 F
(one -tag) 211.5 560.49 T
0 F
( implName) 265.94 560.49 T
1 F
(-type) 336.73 560.49 T
0 F
(IDENTIFIER {) 374.06 560.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(set) 212.6 543.49 T
0 F
( nestedImplName $text }) 232.83 543.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(if) 184.25 526.49 T
0 F
( {\322$childImplName\323 == \322.$nestedImplName\323} {) 192.81 526.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(# create a component con\336guration) 212.6 509.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(# that points to the block con\336guration) 212.6 492.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(set) 212.6 475.49 T
0 F
( CC [ComponentCon\336guration) 232.83 475.49 T
1 F
(#auto) 424.24 475.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(-Name) 240.95 458.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\322cc:$path.$implName.$componentName\323) 240.95 441.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(-Con\336guration $C) 240.95 424.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(-Component) 240.95 407.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
($interfaceName.$implName.$componentName) 240.95 390.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(-Child $nestedC]) 240.95 373.5 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 184.25 356.5 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 155.9 339.5 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 127.56 322.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(if) 127.56 304.49 T
0 F
( [) 136.11 304.49 T
1 F
(catch) 143.9 304.49 T
0 F
( {) 180.46 304.49 T
1 F
(set) 192.93 304.49 T
0 F
( CC }] {) 213.15 304.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(# no nested block con\336guration has con\336gured the childImpl) 155.9 287.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(# create a component con\336guration) 155.9 270.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(# that points to the childimpl directly) 155.9 253.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(set) 155.9 236.49 T
0 F
( CC [ComponentCon\336guration) 176.13 236.49 T
1 F
(#auto) 367.54 236.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(-Name \322cc:$path.$implName.$componentName\323) 184.25 219.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(-Con\336guration $C) 184.25 202.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(-Component) 184.25 185.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
($interfaceName.$implName.$componentName) 184.25 168.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(-Child $childInterfaceName$childImplName]) 184.25 151.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 127.56 134.49 T
0 0 0 1 0 0 0 K
70.87 104.54 538.58 117.54 C
0 0 0 1 0 0 0 K
70.87 112.54 178.87 112.54 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 0 1 0 0 0 K
0 0 595.28 841.89 C
0 0 0 1 0 0 0 K
2 9.6 Q
0 X
0 0 0 1 0 0 0 K
(*.) 88.87 101.34 T
5 12 Q
(Catch) 98.47 96.54 T
2 F
( is a T) 127.13 96.54 T
(cl command that evaluates its parameter as usual but \322catches\323 error condi-) 155.96 96.54 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(tions to avoid that the execution of the whole script is terminated.) 88.87 82.54 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "130" 28
%%Page: "131" 29
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
(6.7 Case study: VHDL) 56.69 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(131) 501.06 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(# don't search for component_con\336guration's) 113.39 696.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(# in nested block_con\336guration's) 113.39 679.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(continue) 113.39 662.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(}) 85.04 645.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(return) 85.04 628.49 T
0 F
( $C) 125.49 628.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 77.95 611.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
-0.07 (Here, the parameters for the creation of a component con\336guration are simpli\336ed in) 56.69 582.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.04 (that components are referenced by their path name instead of a DIM object identi-) 56.69 565.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0 (f) 56.69 548.49 B
0.35 0 (ier retrieved by a query operation. In brief, the purpose of procedure) 60.59 548.49 B
5 F
0.35 0 (doBlockCon-) 450.52 548.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.13 (f) 56.69 531.49 B
0.35 0.13 (ig) 59.93 531.49 B
2 F
0.35 0.13 ( is to resolve a single, possibly nested block conf) 71.09 531.49 B
0.35 0.13 (iguration statement. It mainly) 353.9 531.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.19 (consists of a big loop over all component con\336gurations. The) 56.69 514.49 P
5 F
0.19 (continue) 405.05 514.49 P
2 F
0.19 ( statement at) 453.26 514.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.09 (the end of the loop prevents the traversal from implicitly diving into nested block) 56.69 497.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.26 (con\336gurations because these are to be handled explicitly) 56.69 480.49 P
0.26 (. For each component con-) 373.69 480.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.09 (f) 56.69 463.49 B
0.35 0.09 (iguration, a check is made whether a corresponding block conf) 60.67 463.49 B
0.35 0.09 (iguration exists. If) 419.8 463.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.05 (so, this block conf) 56.69 446.49 B
0.35 0.05 (iguration is recursively resolved and used as child design object) 160.62 446.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.09 (for the component conf) 56.69 429.49 B
0.35 0.09 (iguration. If no such block conf) 189.92 429.49 B
0.35 0.09 (iguration exists, the named) 370.21 429.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.03 (implementation is used as child design object for the component con\336guration. The) 56.69 412.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0 (net result of letting this code operate on the parse tree created from a conf) 56.69 395.49 B
0.35 0 (iguration) 473.84 395.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(in the DP32 processor is the object graph depicted in Figure) 56.69 378.28 T
(14 on page) 396.15 378.28 T
(76.) 461.08 378.28 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(6.7.4) 56.69 339.28 T
(Export: Linking types to parse trees) 91.72 339.28 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.06 (T) 56.69 310.28 B
0.35 0.06 (o export an object graph managed by the DIM service, the type of each object to) 64.33 310.28 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.09 (be exported has to have an) 56.69 293.28 B
5 F
0.35 0.09 (unparse) 213.6 293.28 B
2 F
0.35 0.09 ( method that creates a parse tree for objects of) 259.33 293.28 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.07 (this particular type.) 56.69 276.28 P
5 F
0.07 (Unparse) 168.89 276.28 P
2 F
0.07 ( methods are implemented using the) 217.11 276.28 P
5 F
0.07 (unparse) 423.62 276.28 P
2 F
0.07 ( functions) 468.73 276.28 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.27 (generated for each parser module. Export simply involves the invocation of the) 56.69 259.28 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.08 (unparse method on a selected DIM object and writing the resulting parse tree into a) 56.69 242.28 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(design \336le.) 56.69 225.28 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.26 (For a con\336guration, an enclosing VHDL) 70.87 206.28 P
5 F
-0.26 (con\336guration_declaration) 299.91 206.28 P
2 F
-0.26 ( has to be cre-) 446.91 206.28 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.1 (ated \336rst \050we assume the variable) 56.69 189.28 P
5 F
0.1 (C) 247.81 189.28 P
2 F
0.1 ( to contain the DIM object identi\336er of the con-) 257.15 189.28 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\336guration to be exported\051:) 56.69 172.28 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
([con\336g::unparse -rule con\336guration_declaration) 77.95 153.28 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(-name { -code $C Name } -entityRef { -code [$C Interface] Name }) 85.04 136.28 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(-block_con\336guration { -node $C unparse } ] export $VHDL\336le) 85.04 119.28 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "131" 29
%%Page: "132" 30
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
1 14 Q
0 X
0 0 0 1 0 0 0 K
(132) 70.87 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Processing design description \336les) 323.84 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.09 (T) 70.87 696.49 B
0.35 0.09 (able) 78.54 696.49 B
0.35 0.09 (1) 105.84 696.49 B
0.35 0.09 (1 shows the unparse methods for the types) 112.41 696.49 B
5 F
0.35 0.09 (Conf) 360.3 696.49 B
0.35 0.09 (iguration) 387.13 696.49 B
2 F
0.35 0.09 ( and) 440.11 696.49 B
5 F
0.35 0.09 (Component-) 468.51 696.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.03 (Con\336guration) 70.87 679.49 P
2 F
0.03 ( in our conceptual schema. Every con\336guration visited is emitted as a) 149.43 679.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.4 (nested block conf) 70.87 662.49 B
0.35 0.4 (iguration in the VHDL f) 176.43 662.49 B
0.35 0.4 (ile. Depending on whether the child) 322.45 662.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.25 (design object of a component con\336guration is an implementation or a con\336guration,) 70.87 645.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(the respective VHDL binding indication is emitted.) 70.87 628.49 T
0 0 0 1 0 0 0 K
63.47 76.54 545.98 586.77 C
0 0 0 1 0 0 0 K
71.97 73.7 539.69 147.4 R
7 X
0 0 0 1 0 0 0 K
V
4 14 Q
0 X
(T) 71.97 138.07 T
(able 1) 79.24 138.07 T
(1.) 113.07 138.07 T
5 F
(Implementations of unparse methods for con\336gurations and component) 127.07 138.07 T
(con\336gurations. Only the alternatives for implementations and con\336gurations ar) 71.97 121.07 T
(e) 517.51 121.07 T
-0.07 (shown. The unparse method for component con\336gurations that bind to an interface) 71.97 104.07 P
0 0 0 1 0 0 0 K
71.97 76.54 539.69 82.4 C
0 0 0 1 0 0 0 K
71.97 80.4 305.97 80.4 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 0 1 0 0 0 K
63.47 76.54 545.98 586.77 C
0 0 0 1 0 0 0 K
5 14 Q
0 X
0 0 0 1 0 0 0 K
(ar) 71.97 87.07 T
(e not shown.) 83.9 87.07 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
65.5 195.59 546.16 586.77 R
7 X
V
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
0 X
(DIM type) 84.21 543.44 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(unparse method) 301.1 543.44 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(Con\336guration) 72.36 515.44 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(return) 185.34 517.44 T
0 F
( [con\336g::unparse) 225.78 517.44 T
1 F
(-rule) 333.17 517.44 T
0 F
( block_con\336guration) 363.51 517.44 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(-implName {) 192.42 500.44 T
1 F
(-code) 272.54 500.44 T
0 F
( [$this Implementation] Name }) 309.88 500.44 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(-items {) 192.42 483.44 T
1 F
(-list) 242.99 483.44 T
(set) 271.77 483.44 T
0 F
( ComponentCon\336gurations } ]) 292 483.44 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(Component-) 72.36 457.44 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Con\336guration) 72.36 443.44 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(switch) 178.25 459.44 T
0 F
( [$Child) 221.82 459.44 T
1 F
(info class) 273.17 459.44 T
0 F
(] {) 337.75 459.44 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Implementation {) 178.25 442.44 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(return) 192.42 425.44 T
0 F
( [con\336g::unparse) 232.87 425.44 T
1 F
(-rule) 340.26 425.44 T
0 F
( component_con\336guration) 370.6 425.44 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(-component_speci\336cation {) 220.77 408.44 T
1 F
(-code) 391.96 408.44 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(concat) 249.12 391.44 T
0 F
( "all:" [$Component Name] }) 294.24 391.44 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(-binding {) 220.77 374.44 T
1 F
(-code) 283.03 374.44 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(concat) 249.12 357.44 T
0 F
( \322use entity\323 [$Child Name] } ]) 294.24 357.44 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 192.42 340.44 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Con\336guration {) 178.25 323.44 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(return) 192.42 306.44 T
0 F
( [con\336g::unparse) 232.87 306.44 T
1 F
(-rule) 340.26 306.44 T
0 F
( component_con\336guration) 370.6 306.44 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(-component_speci\336cation {) 220.77 289.44 T
1 F
(-code) 391.96 289.44 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(concat) 249.12 272.44 T
0 F
( \322all:\323 [$Component Name] }) 294.24 272.44 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(-binding {) 220.77 255.44 T
1 F
(-code) 283.03 255.44 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(concat) 249.12 238.44 T
0 F
( \322use entity\323) 294.24 238.44 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
([[[$this Implementation] Interface] Name] }) 277.46 221.44 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\322\050\323 [[$this Implementation] Name] \322\051\323) 277.46 204.44 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(-block {) 220.77 187.44 T
1 F
(-node) 270.57 187.44 T
0 F
( $Child unparse } ]) 308.67 187.44 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}}) 178.25 170.44 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
66.36 560.52 66.36 162.02 2 L
V
0.5 H
0 Z
N
158.07 561.02 158.07 161.52 2 L
V
N
545.29 560.52 545.29 162.02 2 L
V
N
66.11 560.77 545.54 560.77 2 L
V
N
66.61 534.02 545.04 534.02 2 L
V
N
66.61 531.52 545.04 531.52 2 L
V
N
66.11 474.77 545.54 474.77 2 L
V
N
66.11 161.77 545.54 161.77 2 L
V
N
0 0 0 1 0 0 0 K
0 0 595.28 841.89 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "132" 30
%%Page: "133" 31
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
(6.8 Related work) 56.69 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(133) 501.06 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(6.8) 56.69 695.16 T
(Related work) 83.38 695.16 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 14 Q
-0.14 (In this section we will look into the work done by others related to the topics of lan-) 56.69 665.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.07 (guage processing in the context of EDA frameworks. First, we review the support) 56.69 648.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.04 (for design description languages in EDA frameworks together with the integration) 56.69 631.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.45 (level \050cf. Section) 56.69 614.49 B
0.35 0.45 (2.5\051 on which such a support is given. The JESSI Common) 164.73 614.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.21 (Framework \050JCF) 56.69 597.49 P
0.21 (, [Kath\232fer) 151.05 597.49 P
0.21 (92]\051 supports only a-priori tool encapsulation based on) 216.17 597.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.34 (the copying of design \336les between a design data repository and the design tools. As) 56.69 580.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.04 (no concern is given to the contents of design \336les, data integration in JCF is on car-) 56.69 563.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.19 (rier level. EDA Frameworks like Mentor Graphic\325) 56.69 546.49 B
0.35 0.19 (s Falcon Framework [Mentor]) 349 546.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0 (provide format converters between their native design formats and standard or tool) 56.69 529.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.09 (specif) 56.69 512.49 B
0.35 0.09 (ic formats. However) 89.91 512.49 B
0.35 0.09 (, there is no toolkit support for building new converters) 206.51 512.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(besides the standard UNIX tools.) 56.69 495.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.44 (The Nelsis CAD Framework [Dimes) 70.87 476.49 P
0.44 (93b] supports tool integration on a number) 282.21 476.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 (of dif) 56.69 459.49 P
0.35 (ferent levels, with a set of interface functions that allow to access design data) 87.51 459.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(at varying granularities:) 56.69 442.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.03 (While Nelsis, too, does not provide a toolkit to write language processors for arbi-) 56.69 213.78 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.08 (trary design description languages, it of) 56.69 196.78 P
0.08 (fers an extensible set of) 278.48 196.78 P
5 F
0.08 (format handlers) 414.58 196.78 P
2 F
0.08 ( for) 504.5 196.78 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.17 (common formats. A format handler is a library function that knows how to read and) 56.69 179.78 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.04 (write design data in a speci\336c format. The functions) 56.69 162.78 P
5 F
-0.04 (dmGetDesignData) 351.07 162.78 P
2 F
-0.04 ( and) 456.05 162.78 P
5 F
-0.04 (dmPut-) 483.19 162.78 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.05 (DesignData) 56.69 145.78 B
2 F
0.35 0.05 ( take the format handler needed to process a particular design descrip-) 124.85 145.78 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.13 (tion language as a parameter) 56.69 128.78 P
-0.13 (. Format handlers provide a uniform interface to design) 215.57 128.78 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.14 (data from a tool\325) 56.69 111.78 B
0.35 0.14 (s point of view) 153.09 111.78 B
0.35 0.14 (. Unfortunately) 238.97 111.78 B
0.35 0.14 (, support to write new format han-) 326.08 111.78 B
0 0 0 1 0 0 0 K
55.46 238.11 525.64 437.83 C
0 0 0 1 0 0 0 K
55.46 247.91 526.01 437.83 R
7 X
0 0 0 1 0 0 0 K
V
0 0 0 1 0 0 0 K
55.46 250.83 525.64 256.83 C
0 0 0 1 0 0 0 K
55.46 254.83 289.46 254.83 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 0 1 0 0 0 K
55.46 238.11 525.64 437.83 C
0 0 0 1 0 0 0 K
4 14 Q
0 X
0 0 0 1 0 0 0 K
(T) 55.46 261.49 T
(able 12.) 62.72 261.49 T
5 F
(Integration granularities in the Nelsis CAD Framework) 111.33 261.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(granularity) 78.5 394.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(interface functions) 277.67 394.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(\336le-based) 73.43 366.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.17 (dmGetPathOfStream, dmMoveFileT) 160.92 366.49 P
-0.17 (oStream, dmCloseStream) 365.1 366.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(stream-based) 73.43 338.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(dmOpenStream, \050standard-i/o facilities\051, dmCloseStream) 160.92 338.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(value-based) 73.43 310.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(dmOpenStream, dmGetDesignData, dmPutDesignData,) 160.92 310.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(dmCloseStream) 160.92 296.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
67.43 411.58 67.43 286.08 2 L
V
0.5 H
0 Z
N
154.92 412.08 154.92 285.58 2 L
V
N
514.04 411.58 514.04 286.08 2 L
V
N
67.18 411.83 514.29 411.83 2 L
V
N
67.68 385.08 513.79 385.08 2 L
V
N
67.68 382.58 513.79 382.58 2 L
V
N
67.18 355.83 514.29 355.83 2 L
V
N
67.18 327.83 514.29 327.83 2 L
V
N
67.18 285.83 514.29 285.83 2 L
V
N
0 0 0 1 0 0 0 K
0 0 595.28 841.89 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "133" 31
%%Page: "134" 32
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
1 14 Q
0 X
0 0 0 1 0 0 0 K
(134) 70.87 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Processing design description \336les) 323.84 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.35 0.03 (dlers is restricted to scanf/printf-like functions. This is clearly insuf) 70.87 696.49 B
0.35 0.03 (f) 452.74 696.49 B
0.35 0.03 (icient for free-) 456.66 696.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(format languages like VHDL.) 70.87 679.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.06 (Regarding the problem of framework support for design description languages to) 85.04 660.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.16 (\336nd an answer to the question) 70.87 643.49 P
5 F
0.16 (\322how to map between syntax and objects,\323) 242.92 643.49 P
2 F
0.16 (some so-) 488.26 643.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.68 (lutions are of) 70.87 626.49 P
1.68 (fered in the literature. Many \322C++\323 class libraries have methods to) 147.86 626.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.47 (dump an object graph to a \336le and to read such \336les back into memory) 70.87 609.49 P
-0.47 (. However) 457.66 609.49 P
-0.47 (, the) 514.94 609.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.13 (format of such a dump is \336xed, whereas the object-oriented database system OBST) 70.87 592.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.03 (follows a more \337exible approach. Its) 70.87 575.49 P
5 F
0.03 (Structur) 279.83 575.49 P
0.03 (er and Flattener) 325.21 575.49 P
2 F
0.03 ( \050STF) 417.03 575.49 P
0.03 (, [Per) 448.23 575.49 P
0.03 (gande) 478.33 575.49 P
0.03 (93]\051) 515.26 575.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.81 (is a general tool to map between textual \336les and objects stored in an OBST database.) 70.87 558.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.74 (STF translates a single syntax speci\336cation into a pair of programs, a structurer to) 70.87 541.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.09 (read an object graph from a \336le, and a \337attener to write an object graph to a \336le \050the) 70.87 524.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.61 (generation process is similar to the one depicted in Figure) 70.87 507.49 P
0.61 (25\051. The structurer con-) 403.79 507.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.34 (tains a yacc-generated parser) 70.87 490.49 P
-0.34 (, the \337attener is constructed from a set of recursive pro-) 231.37 490.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.64 (cedures. While the STF approach resembles ours, it can not be applied for the fol-) 70.87 473.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(lowing reasons:) 70.87 456.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 85.04 437.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4.03 (STF assumes the OBST database system as back-end of the generated) 92.13 437.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.59 (language processors. The mapping between \050implicit\051 parse tree and an OBST) 92.13 420.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(object graph is compiled into the language processors.) 92.13 403.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 85.04 384.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.38 (STF syntax speci\336cations are restricted in that the syntax for a class must be) 92.13 384.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.36 (described with a single syntax rule. While the provided EBNF constructs) 92.13 367.5 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.47 (make up for this to a certain extent, in general it is complicated to map a given) 92.13 350.5 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(language speci\336cation to STF) 92.13 333.5 T
(.) 257.83 333.5 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 85.04 314.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.16 (STF generated parsers are expected to process every single detail from a \336le.) 92.13 314.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.52 (This does not conform with our approach of only considering the bits in a) 92.13 297.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.06 (design description that are important to DIM, ignoring most of the details. T) 92.13 280.49 P
-0.06 (o) 517.41 280.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3.54 (provide more \337exibility in choosing the parsing granularity) 92.13 263.49 P
3.54 (, we provide) 447.73 263.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(modular syntax speci\336cations.) 92.13 246.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "134" 32
%%Page: "135" 33
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
(6.8 Related work) 56.69 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(135) 501.06 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 F
0.28 (Txl) 56.69 696.49 P
2 F
0.28 ( [Carmichael) 74.58 696.49 P
0.28 (92] and) 151.07 696.49 P
5 F
0.28 (ParsesraP) 197.5 696.49 P
2 F
0.28 ( [Beaty) 256.61 696.49 P
0.28 (94] are two other systems that also pro-) 301.21 696.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.02 (vide a single speci\336cation language for both input and output. Both, however) 56.69 679.49 P
-0.02 (, oper-) 487.89 679.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.08 (ate as f) 56.69 662.49 B
0.35 0.08 (ilters to translate between two dif) 96.93 662.49 B
0.35 0.08 (ferent source representations. There is no) 288.34 662.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(documented programmatic access to the intermediate parse tree.) 56.69 645.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3.26 (Graver describes the system) 70.87 626.49 P
5 F
3.26 (T) 244.88 626.49 P
3.26 (-gen) 251.63 626.49 P
2 F
3.26 ( to automatically generate string-to-object) 276.5 626.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.54 (translators in the context of the Smalltalk programming environment [Graver) 56.69 609.49 P
-0.54 (93]. T) 487.36 609.49 P
-0.54 (-) 519.75 609.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.27 (gen supports a lar) 56.69 592.49 P
-0.27 (ge class of grammars \050LL\0501\051, SLR\0501\051, LALR\0501\051, LR\0501\051\051. The gen-) 154.77 592.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.07 (erated translators are Smalltalk objects and either create two variants of parse trees,) 56.69 575.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.26 (derivation trees or abstract syntax trees from their input. While derivation trees con-) 56.69 558.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.47 (tain all intermediate non-terminals created during parsing, abstract syntax trees are) 56.69 541.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.64 (pruned by parse-tree builder directives \050PTBs\051 inserted in the syntax speci\336cation by) 56.69 524.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.65 (the programmer) 56.69 507.49 P
-0.65 (. PTBs can be used to explicitly construct a parse tree node or to con-) 145.08 507.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.13 (trol the \337ow of information between tree nodes. For example, there is a PTB) 56.69 490.49 P
5 F
1.13 (lift-) 504.18 490.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.13 (RightChild) 56.69 473.49 P
2 F
-0.13 ( to help \337attening the derivation tree. Consider a set of rules of the form) 118.15 473.49 P
2 11.2 Q
-0.1 (*) 518.81 479.09 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 14 Q
(ArgList) 77.95 454.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(:) 141.73 454.49 T
(Arg ArgList) 149.52 454.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
({ liftRightChild }) 255.12 454.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(| Arg) 141.73 436.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
({ ArgumentListNode };) 255.12 436.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Arg) 77.95 418.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(: <argument>) 141.73 418.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
({ ArgumentNode };) 255.12 418.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
0.07 (The capitalized PTBs) 56.69 389.49 P
5 F
0.07 (Ar) 180.93 389.49 P
0.07 (gumentNode) 194.42 389.49 P
2 F
0.07 ( and) 265.19 389.49 P
5 F
0.07 (Ar) 292.54 389.49 P
0.07 (gumentListNode) 306.02 389.49 P
2 F
0.07 ( create tree nodes. The) 397.8 389.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.06 (PTB) 56.69 372.49 P
5 F
-0.06 (liftRightChild) 85.81 372.49 P
2 F
-0.06 ( prevents that a new tree node is created. Instead, the tree associ-) 162.83 372.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.26 (ated with the right-most symbol on the right-hand side is used as tree for the symbol) 56.69 355.5 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.21 (on the left-hand side. The other right-hand side symbols are appended as children to) 56.69 338.5 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.15 (this tree, thus ef) 56.69 321.49 B
0.35 0.15 (fectively f) 149.62 321.49 B
0.35 0.15 (lattening the derivation tree to a list. Our system could) 208 321.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.03 (benef) 56.69 304.49 B
0.35 0.03 (it from the introduction of PTBs. However) 87.17 304.49 B
0.35 0.03 (, because we skip lar) 329.11 304.49 B
0.35 0.03 (ge parts of an) 447.15 304.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.14 (input \336le, the parse trees generated by our parsers are generally small. By means of) 56.69 287.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.31 (our declarative operators) 56.69 270.49 P
5 F
-0.31 (all) 198.43 270.49 P
2 F
-0.31 ( and) 213.22 270.49 P
5 F
-0.31 (one) 239.81 270.49 P
2 F
-0.31 ( we create the illusion of a pruned tree that only) 260.02 270.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 0.21 (contains relevant information for the programmer) 56.69 253.49 B
0.35 0.21 (. This approach has the advan-) 345.73 253.49 B
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.23 (tages that we can keep the syntax speci\336cation completely free of manually inserted) 56.69 236.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(action code. All \322tree pruning\323 is done from extension language scripts.) 56.69 219.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.87 (Certainly) 70.87 200.49 P
0.87 (, there are more sophisticated systems to process parse trees, yet all of) 122.06 200.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.6 (them insist on processing \336les down to single lexems, as, after all, this is required for) 56.69 183.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.86 (compiler construction. They also have limitations which make them unusable as) 56.69 166.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.55 (general toolkits for building language processors to encapsulate design tools.) 56.69 149.49 P
5 F
1.55 (Txl) 506.52 149.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
-0.18 ([Carmichael) 56.69 132.49 P
-0.18 (92] relies on its own internal representation of parse trees and provides) 129.4 132.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.78 (no documented hooks to extract information from such trees.) 56.69 115.49 P
5 F
-0.78 (Puma) 394.95 115.49 P
2 F
-0.78 ( [Grosch) 427.61 115.49 P
-0.78 (91] uses) 478.92 115.49 P
0 0 0 1 0 0 0 K
56.69 90.54 524.41 103.54 C
0 0 0 1 0 0 0 K
56.69 98.54 164.69 98.54 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 0 1 0 0 0 K
0 0 595.28 841.89 C
0 0 0 1 0 0 0 K
2 9.6 Q
0 X
0 0 0 1 0 0 0 K
(*.) 74.69 87.34 T
2 12 Q
(W) 84.29 82.54 T
(e use) 94.66 82.54 T
5 F
(yacc\325) 121.99 82.54 T
(s) 146.42 82.54 T
2 F
( notation here. Curly braces contain action code) 151.09 82.54 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "135" 33
%%Page: "136" 34
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
1 14 Q
0 X
0 0 0 1 0 0 0 K
(136) 70.87 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Processing design description \336les) 323.84 746.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
-0.62 (Modula2 as implementation language and relies on the use of its associated compiler) 70.87 696.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.06 (frontend. A viable alternative to our parse tree operators might have been the use of) 70.87 679.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 F
0.44 (Sor) 70.87 662.49 P
0.44 (cer) 89.79 662.49 P
0.44 (er) 107.15 662.49 P
2 F
0.44 ( [Parr) 118.82 662.49 P
0.44 (94], but we prefer a solution using an interpreted language in which) 154.24 662.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.78 (framework administrators or even designers can easily create new or modify existing) 70.87 645.49 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(mappings without the need for recompilation.) 70.87 628.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "136" 34
%%Trailer
%%BoundingBox: 0 0 595.28 841.89
%%PageOrder: Ascend
%%Pages: 34
%%DocumentFonts: Helvetica
%%+ Helvetica-Bold
%%+ Times-Roman
%%+ Times-Bold
%%+ Times-BoldItalic
%%+ Times-Italic
%%+ Helvetica-Oblique
%%EOF

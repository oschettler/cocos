#
# parser/lib/lex.code --
#
#	Code fragments for lex file <syntax>.l
#
# Copyright (c) 1993-1997 Olav Schettler
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# $Id: lex.code,v 1.1 1995/10/25 20:09:24 olav Exp $
#--------------------------------------------------------------------------
# $Log: lex.code,v $
# Revision 1.1  1995/10/25  20:09:24  olav
# 1
#
#

block banner SYNTAX

%{
/*
 * SYNTAX.l -- lex input generated by cocos-R3
 * Copyright (c) 1993-1997 Olav Schettler
 *
 * email: olav@werbemittel.com
 */

#include <stdio.h>
#include <ctype.h>
#include <stdarg.h>
#include <setjmp.h>
#include <tcl.h>

#include <bind.h>
#include "tree.h"
#include "SYNTAX.tab.h"

extern ParseTree* SYNTAXTree;

#undef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
{ \
  result = ((SYNTAXTree->file->buffer + SYNTAXTree->file->length - SYNTAXTree->file->ptr) <= 0) \
    ? YY_NULL \
    : (buf[0] = *SYNTAXTree->file->ptr++, 1); \
  if (buf[0] == '\n') SYNTAXTree->file->lineno++; \
}

#define tokenNode(id) \
  new Node (SYNTAXTree, id-258, SYNTAXTree->file->offset, SYNTAXTree->file->offset + yyleng); \
  SYNTAXTree->file->offset += yyleng;
%}

%%
end_block

block token SYNTAX ID LEXEM
LEXEM	{ SYNTAXlval = tokenNode (ID); 	return ID; }end_block

block ignore SYNTAX LEXEM
LEXEM	{ SYNTAXTree->file->offset += yyleng; }end_block

block trailer SYNTAX
\n	{ SYNTAXTree->file->offset += yyleng; }
[ \t]+	{ SYNTAXTree->file->offset += yyleng; }
.	{ SYNTAXTree->file->offset += yyleng; }

%%

int 
SYNTAXwrap() 
{ return 1; }

end_block

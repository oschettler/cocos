/*
 * parser/tokenize.cc --
 *
 *	Convert a pattern to a token name
 *
 * Copyright (c) 1993-1997 Olav Schettler
 *
 * See the file "license.terms" for information on usage and redistribution
 * of this file, and for a DISCLAIMER OF ALL WARRANTIES.
 *
 * $Id: tokenize.cc,v 1.1 1995/10/25 20:09:25 olav Exp $
 *--------------------------------------------------------------------------
 * $Log: tokenize.cc,v $
// Revision 1.1  1995/10/25  20:09:25  olav
// 1
//
 */

static char rcsid[] = "$Id: tokenize.cc,v 1.1 1995/10/25 20:09:25 olav Exp $";

#include <string.h>

static struct Trans {
  char* s;
  int l;
} TransTb [256] = {
{ /* ^@ */ "_00", 3 },
{ /* ^A */ "_01", 3 },
{ /* ^B */ "_02", 3 },
{ /* ^C */ "_03", 3 },
{ /* ^D */ "_04", 3 },
{ /* ^E */ "_05", 3 },
{ /* ^F */ "_06", 3 },
{ /* ^G */ "_07", 3 },
{ /* ^H */ "_08", 3 },
{ /* ^I */ "_09", 3 },
{ /* ^J */ "_0a", 3 },
{ /* ^K */ "_0b", 3 },
{ /* ^L */ "_0c", 3 },
{ /* ^M */ "_0d", 3 },
{ /* ^N */ "_0e", 3 },
{ /* ^O */ "_0f", 3 },
{ /* ^P */ "_10", 3 },
{ /* ^Q */ "_11", 3 },
{ /* ^R */ "_12", 3 },
{ /* ^S */ "_13", 3 },
{ /* ^T */ "_14", 3 },
{ /* ^U */ "_15", 3 },
{ /* ^V */ "_16", 3 },
{ /* ^W */ "_17", 3 },
{ /* ^X */ "_18", 3 },
{ /* ^Y */ "_19", 3 },
{ /* ^Z */ "_1a", 3 },
{ /* ^[ */ "_1b", 3 },
{ /* ^\ */ "_1c", 3 },
{ /* ^] */ "_1d", 3 },
{ /* ^^ */ "_1e", 3 },
{ /* ^_ */ "_1f", 3 },
{ /*   */ "_20", 3 },
{ /* ! */ "_21", 3 },
{ /* " */ "_22", 3 },
{ /* # */ "_23", 3 },
{ /* $ */ "_24", 3 },
{ /* % */ "_25", 3 },
{ /* & */ "_26", 3 },
{ /* ' */ "_27", 3 },
{ /* ( */ "_28", 3 },
{ /* ) */ "_29", 3 },
{ /* * */ "_2a", 3 },
{ /* + */ "_2b", 3 },
{ /* , */ "_2c", 3 },
{ /* - */ "_2d", 3 },
{ /* . */ "_2e", 3 },
{ /* / */ "_2f", 3 },
{ /* 0 */ "0", 1 },
{ /* 1 */ "1", 1 },
{ /* 2 */ "2", 1 },
{ /* 3 */ "3", 1 },
{ /* 4 */ "4", 1 },
{ /* 5 */ "5", 1 },
{ /* 6 */ "6", 1 },
{ /* 7 */ "7", 1 },
{ /* 8 */ "8", 1 },
{ /* 9 */ "9", 1 },
{ /* : */ "_3a", 3 },
{ /* ; */ "_3b", 3 },
{ /* < */ "_3c", 3 },
{ /* = */ "_3d", 3 },
{ /* > */ "_3e", 3 },
{ /* ? */ "_3f", 3 },
{ /* @ */ "_40", 3 },
{ /* A */ "A", 1 },
{ /* B */ "B", 1 },
{ /* C */ "C", 1 },
{ /* D */ "D", 1 },
{ /* E */ "E", 1 },
{ /* F */ "F", 1 },
{ /* G */ "G", 1 },
{ /* H */ "H", 1 },
{ /* I */ "I", 1 },
{ /* J */ "J", 1 },
{ /* K */ "K", 1 },
{ /* L */ "L", 1 },
{ /* M */ "M", 1 },
{ /* N */ "N", 1 },
{ /* O */ "O", 1 },
{ /* P */ "P", 1 },
{ /* Q */ "Q", 1 },
{ /* R */ "R", 1 },
{ /* S */ "S", 1 },
{ /* T */ "T", 1 },
{ /* U */ "U", 1 },
{ /* V */ "V", 1 },
{ /* W */ "W", 1 },
{ /* X */ "X", 1 },
{ /* Y */ "Y", 1 },
{ /* Z */ "Z", 1 },
{ /* [ */ "_5b", 3 },
{ /* \ */ "_5c", 3 },
{ /* ] */ "_5d", 3 },
{ /* ^ */ "_5e", 3 },
{ /* _ */ "_5f", 3 },
{ /* ` */ "_60", 3 },
{ /* a */ "a", 1 },
{ /* b */ "b", 1 },
{ /* c */ "c", 1 },
{ /* d */ "d", 1 },
{ /* e */ "e", 1 },
{ /* f */ "f", 1 },
{ /* g */ "g", 1 },
{ /* h */ "h", 1 },
{ /* i */ "i", 1 },
{ /* j */ "j", 1 },
{ /* k */ "k", 1 },
{ /* l */ "l", 1 },
{ /* m */ "m", 1 },
{ /* n */ "n", 1 },
{ /* o */ "o", 1 },
{ /* p */ "p", 1 },
{ /* q */ "q", 1 },
{ /* r */ "r", 1 },
{ /* s */ "s", 1 },
{ /* t */ "t", 1 },
{ /* u */ "u", 1 },
{ /* v */ "v", 1 },
{ /* w */ "w", 1 },
{ /* x */ "x", 1 },
{ /* y */ "y", 1 },
{ /* z */ "z", 1 },
{ /* { */ "_7b", 3 },
{ /* | */ "_7c", 3 },
{ /* } */ "_7d", 3 },
{ /* ~ */ "_7e", 3 },
{ /* ^? */ "_7f", 3 },
{ /* ^@ */ "_80", 3 },
{ /* ^A */ "_81", 3 },
{ /* ^B */ "_82", 3 },
{ /* ^C */ "_83", 3 },
{ /* ^D */ "_84", 3 },
{ /* ^E */ "_85", 3 },
{ /* ^F */ "_86", 3 },
{ /* ^G */ "_87", 3 },
{ /* ^H */ "_88", 3 },
{ /* ^I */ "_89", 3 },
{ /* ^J */ "_8a", 3 },
{ /* ^K */ "_8b", 3 },
{ /* ^L */ "_8c", 3 },
{ /* ^M */ "_8d", 3 },
{ /* ^N */ "_8e", 3 },
{ /* ^O */ "_8f", 3 },
{ /* ^P */ "_90", 3 },
{ /* ^Q */ "_91", 3 },
{ /* ^R */ "_92", 3 },
{ /* ^S */ "_93", 3 },
{ /* ^T */ "_94", 3 },
{ /* ^U */ "_95", 3 },
{ /* ^V */ "_96", 3 },
{ /* ^W */ "_97", 3 },
{ /* ^X */ "_98", 3 },
{ /* ^Y */ "_99", 3 },
{ /* ^Z */ "_9a", 3 },
{ /* ^[ */ "_9b", 3 },
{ /* ^\ */ "_9c", 3 },
{ /* ^] */ "_9d", 3 },
{ /* ^^ */ "_9e", 3 },
{ /* ^_ */ "_9f", 3 },
{ /*   */ "_a0", 3 },
{ /* ¡ */ "_a1", 3 },
{ /* ¢ */ "_a2", 3 },
{ /* £ */ "_a3", 3 },
{ /* ¤ */ "_a4", 3 },
{ /* ¥ */ "_a5", 3 },
{ /* ¦ */ "_a6", 3 },
{ /* § */ "_a7", 3 },
{ /* ¨ */ "_a8", 3 },
{ /* © */ "_a9", 3 },
{ /* ª */ "_aa", 3 },
{ /* « */ "_ab", 3 },
{ /* ¬ */ "_ac", 3 },
{ /* ­ */ "_ad", 3 },
{ /* ® */ "_ae", 3 },
{ /* ¯ */ "_af", 3 },
{ /* ° */ "_b°", 3 },
{ /* ± */ "_b±", 3 },
{ /* ² */ "_b²", 3 },
{ /* ³ */ "_b³", 3 },
{ /* ´ */ "_b´", 3 },
{ /* µ */ "_bµ", 3 },
{ /* ¶ */ "_b6", 3 },
{ /* · */ "_b7", 3 },
{ /* ¸ */ "_b8", 3 },
{ /* ¹ */ "_b9", 3 },
{ /* º */ "_ba", 3 },
{ /* » */ "_bb", 3 },
{ /* ¼ */ "_bc", 3 },
{ /* ½ */ "_bd", 3 },
{ /* ¾ */ "_be", 3 },
{ /* ¿ */ "_bf", 3 },
{ /* À */ "_c0", 3 },
{ /* Á */ "_c1", 3 },
{ /* Â */ "_c2", 3 },
{ /* Ã */ "_c3", 3 },
{ /* Ä */ "_c4", 3 },
{ /* Å */ "_c5", 3 },
{ /* Æ */ "_c6", 3 },
{ /* Ç */ "_c7", 3 },
{ /* È */ "_c8", 3 },
{ /* É */ "_c9", 3 },
{ /* Ê */ "_ca", 3 },
{ /* Ë */ "_cb", 3 },
{ /* Ì */ "_cc", 3 },
{ /* Í */ "_cd", 3 },
{ /* Î */ "_ce", 3 },
{ /* Ï */ "_cf", 3 },
{ /* Ð */ "_d0", 3 },
{ /* Ñ */ "_d1", 3 },
{ /* Ò */ "_d2", 3 },
{ /* Ó */ "_d3", 3 },
{ /* Ô */ "_d4", 3 },
{ /* Õ */ "_d5", 3 },
{ /* Ö */ "_d6", 3 },
{ /* × */ "_d7", 3 },
{ /* Ø */ "_d8", 3 },
{ /* Ù */ "_d9", 3 },
{ /* Ú */ "_da", 3 },
{ /* Û */ "_db", 3 },
{ /* Ü */ "_dc", 3 },
{ /* Ý */ "_dd", 3 },
{ /* Þ */ "_de", 3 },
{ /* ß */ "_df", 3 },
{ /* à */ "_e0", 3 },
{ /* á */ "_e1", 3 },
{ /* â */ "_e2", 3 },
{ /* ã */ "_e3", 3 },
{ /* ä */ "_e4", 3 },
{ /* å */ "_e5", 3 },
{ /* æ */ "_e6", 3 },
{ /* ç */ "_e7", 3 },
{ /* è */ "_e8", 3 },
{ /* é */ "_e9", 3 },
{ /* ê */ "_ea", 3 },
{ /* ë */ "_eb", 3 },
{ /* ì */ "_ec", 3 },
{ /* í */ "_ed", 3 },
{ /* î */ "_ee", 3 },
{ /* ï */ "_ef", 3 },
{ /* ð */ "_f0", 3 },
{ /* ñ */ "_f1", 3 },
{ /* ò */ "_f2", 3 },
{ /* ó */ "_f3", 3 },
{ /* ô */ "_f4", 3 },
{ /* õ */ "_f5", 3 },
{ /* ö */ "_f6", 3 },
{ /* ÷ */ "_f7", 3 },
{ /* ø */ "_f8", 3 },
{ /* ù */ "_f9", 3 },
{ /* ú */ "_fa", 3 },
{ /* û */ "_fb", 3 },
{ /* ü */ "_fc", 3 },
{ /* ý */ "_fd", 3 },
{ /* þ */ "_fe", 3 },
{ /* ^? */ "_ff", 3 },
};

char* 
tokenize (char* s)
{
  char* result;
  int length = 0;
  char* c;
  int s_length = strlen (s);
  
  for (c = s; c < &s [s_length]; c++) {
	length += TransTb [*c].l;
  }

  result = new char [length + 3];
  strcpy (result, "t_");
  for (c = s; c < &s [s_length]; c++) {
	strcat (result, TransTb [*c].s);
  }
  return result;
}
